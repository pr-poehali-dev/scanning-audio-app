import { useRef } from 'react';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

interface ProcessSectionProps {
  type: 'delivery' | 'receiving' | 'return';
  title: string;
  iconName: string;
  iconColor: string;
  files: File[];
  uploading: string | null;
  onFolderUpload: (type: 'delivery' | 'receiving' | 'return', event: React.ChangeEvent<HTMLInputElement>) => void;
  onClearSection: (type: 'delivery' | 'receiving' | 'return') => void;
  showRecommendations?: boolean;
}

export const ProcessSectionComponent = ({
  type,
  title,
  iconName,
  iconColor,
  files,
  uploading,
  onFolderUpload,
  onClearSection,
  showRecommendations = false
}: ProcessSectionProps) => {
  const fileInputRef = useRef<HTMLInputElement>(null);

  return (
    <div className="border rounded-lg p-4 space-y-3">
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-2">
          <Icon name={iconName as any} size={18} className={iconColor} />
          <span className="font-medium">{title}</span>
          <Badge variant="secondary">{files.length} —Ñ–∞–π–ª–æ–≤</Badge>
        </div>
        {files.length > 0 && (
          <Button
            variant="ghost"
            size="sm"
            onClick={() => onClearSection(type)}
            className="text-red-500 hover:text-red-700"
          >
            <Icon name="Trash2" size={16} />
          </Button>
        )}
      </div>
      
      <input
        ref={fileInputRef}
        type="file"
        multiple
        webkitdirectory="true"
        directory=""
        accept="audio/*"
        onChange={(e) => onFolderUpload(type, e)}
        className="hidden"
      />
      
      <Button
        variant="outline"
        onClick={() => fileInputRef.current?.click()}
        disabled={uploading === type}
        className="w-full"
      >
        {uploading === type ? (
          <>
            <Icon name="Loader2" size={16} className="animate-spin mr-2" />
            –ó–∞–≥—Ä—É–∑–∫–∞...
          </>
        ) : (
          <>
            <Icon name="FolderOpen" size={16} className="mr-2" />
            –í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è {type === 'delivery' ? '–≤—ã–¥–∞—á–∏' : type === 'receiving' ? '–ø—Ä–∏–µ–º–∫–∏' : '–≤–æ–∑–≤—Ä–∞—Ç–∞'}
          </>
        )}
      </Button>
      
      {showRecommendations && (
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-3">
          <p className="text-sm text-blue-800 font-medium mb-2">üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–∏–µ–º–∫–∏:</p>
          <div className="text-xs text-blue-700 space-y-1">
            <div><strong>–î–µ–π—Å—Ç–≤–∏—è:</strong> "–∫–æ—Ä–æ–±–∫–∞-–ø—Ä–∏–Ω—è—Ç–∞.mp3", "–æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ-–µ—â–µ-—Ä–∞–∑.mp3", "–ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ-–ø—Ä–∏–µ–º–∫—É.mp3"</div>
            <div><strong>–°—Ç–∞—Ç—É—Å—ã:</strong> "—Ç–æ–≤–∞—Ä-–¥–ª—è-–ø–≤–∑.mp3", "–æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ-—Å–ª–µ–¥—É—é—â–∏–π-—Ç–æ–≤–∞—Ä.mp3", "–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π-–∑–∞–∫–∞–∑.mp3"</div>
            <div><strong>–ü—Ä–æ–≤–µ—Ä–∫–∏:</strong> "–ø–æ–≤—Ç–æ—Ä-—Ç–æ–≤–∞—Ä-—É–∂–µ-–ø—Ä–∏–Ω—è—Ç.mp3", "–∫–æ—Ä–æ–±–∫–∞-–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞.mp3"</div>
            <div><strong>–Ø—á–µ–π–∫–∏:</strong> "1.mp3", "2.mp3", "3.mp3" ... "482.mp3" (–Ω–æ–º–µ—Ä–∞ —è—á–µ–µ–∫)</div>
          </div>
        </div>
      )}
    </div>
  );
};