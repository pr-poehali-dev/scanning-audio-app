import React from 'react';

export const DiagnosticTools: React.FC = () => {
  const handleEmergencyDiagnostic = async () => {
    console.log('üö® === –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ ===');
    
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –Ω–∞–ø—Ä—è–º—É—é
    console.log('üì¶ –ü–†–û–í–ï–†–ö–ê LOCALSTORAGE:');
    const keys = Object.keys(localStorage);
    const audioKeys = keys.filter(k => k.includes('audio') || k.includes('cell') || k.includes('wb-'));
    console.log(`–í—Å–µ–≥–æ –∫–ª—é—á–µ–π: ${keys.length}`);
    console.log(`–ê—É–¥–∏–æ –∫–ª—é—á–µ–π: ${audioKeys.length}`);
    audioKeys.forEach(key => {
      const data = localStorage.getItem(key);
      const size = data ? Math.round(data.length / 1024) : 0;
      console.log(`  - ${key}: ${size}KB`);
      
      // –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
      if (key === 'wb-audio-files-unified') {
        try {
          const parsed = JSON.parse(data);
          console.log(`    üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞:`, parsed);
          console.log(`    üè† –Ø—á–µ–π–∫–∏:`, Object.keys(parsed.cells || {}));
        } catch (e) {
          console.log(`    ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: ${e.message}`);
        }
      }
    });
    
    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
    console.log('\nüß™ –¢–ï–°–¢ –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´:');
    try {
      const { audioManager } = await import('@/utils/simpleAudioManager');
      const cells = audioManager.getCellsWithAudio();
      const info = audioManager.getStorageInfo();
      
      console.log(`–Ø—á–µ–µ–∫ –≤ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ: ${cells.length}`);
      console.log(`–î–æ—Å—Ç—É–ø–Ω—ã–µ —è—á–µ–π–∫–∏:`, cells);
      console.log(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:`, info);
      
      // –¢–µ—Å—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
      if (cells.length > 0) {
        const testCell = cells[0];
        console.log(`üéµ –¢–µ—Å—Ç–∏—Ä—É—é –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —è—á–µ–π–∫–∏ ${testCell}...`);
        const success = await audioManager.playCellAudio(testCell);
        console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: ${success ? '–£–°–ü–ï–• ‚úÖ' : '–ü–†–û–í–ê–õ ‚ùå'}`);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:', error);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    console.log('\nüéØ –¢–ï–°–¢ –û–°–ù–û–í–ù–û–ô –§–£–ù–ö–¶–ò–ò:');
    try {
      const { playCellAudio, getAudioEnabledCells } = await import('@/utils/cellAudioPlayer');
      const enabledCells = getAudioEnabledCells();
      console.log(`–Ø—á–µ–π–∫–∏ —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é: ${enabledCells.length}`);
      console.log(`–°–ø–∏—Å–æ–∫:`, enabledCells);
      
      if (enabledCells.length > 0) {
        const testCell = enabledCells[0];
        console.log(`üéµ –¢–µ—Å—Ç–∏—Ä—É—é –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å —è—á–µ–π–∫–æ–π ${testCell}...`);
        const success = await playCellAudio(testCell);
        console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏: ${success ? '–£–°–ü–ï–• ‚úÖ' : '–ü–†–û–í–ê–õ ‚ùå'}`);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏:', error);
    }
    
    alert('–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å (F12) –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.');
  };

  const handleDetailedDiagnostic = async () => {
    console.log('üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –û–ó–í–£–ß–ö–ò –Ø–ß–ï–ï–ö ===');
    
    let report = '–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –û–ó–í–£–ß–ö–ò –Ø–ß–ï–ï–ö:\n\n';
    
    try {
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º Data URL –º–µ–Ω–µ–¥–∂–µ—Ä
      const { audioManager, getStorageInfo } = await import('@/utils/simpleAudioManager');
      const info = getStorageInfo();
      const cells = audioManager.getCellsWithAudio();
      
      report += `üìä DATA URL –°–ò–°–¢–ï–ú–ê:\n`;
      report += `  –§–∞–π–ª–æ–≤: ${info.totalFiles}\n`;
      report += `  –Ø—á–µ–µ–∫: ${info.cellsCount}\n`;
      report += `  –†–∞–∑–º–µ—Ä: ${info.totalSize}\n`;
      report += `  –î–æ—Å—Ç—É–ø–Ω—ã–µ —è—á–µ–π–∫–∏: ${cells.slice(0, 10).join(', ')}\n\n`;
      
      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º Object URL –º–µ–Ω–µ–¥–∂–µ—Ä
      const { objectUrlAudioManager, getAudioManagerInfo } = await import('@/utils/objectUrlAudioManager');
      const objInfo = getAudioManagerInfo();
      const objCells = objectUrlAudioManager.getCellsWithAudio();
      
      report += `üìä OBJECT URL –°–ò–°–¢–ï–ú–ê:\n`;
      report += `  –Ø—á–µ–µ–∫: ${objInfo.cellsCount}\n`;
      report += `  URLs: ${objInfo.totalUrls}\n`;
      report += `  –î–æ—Å—Ç—É–ø–Ω—ã–µ —è—á–µ–π–∫–∏: ${objCells.slice(0, 10).join(', ')}\n\n`;
      
      // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
      const { getCellsFromMainSystem } = await import('@/utils/cellAudioIntegration');
      const mainCells = getCellsFromMainSystem();
      
      report += `üìä –ì–õ–ê–í–ù–ê–Ø –°–ò–°–¢–ï–ú–ê (wb-audio-files):\n`;
      report += `  –Ø—á–µ–µ–∫: ${mainCells.length}\n`;
      report += `  –î–æ—Å—Ç—É–ø–Ω—ã–µ —è—á–µ–π–∫–∏: ${mainCells.slice(0, 10).join(', ')}\n\n`;
      
      // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é —è—á–µ–π–∫—É —á–µ—Ä–µ–∑ –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã
      if (cells.length > 0) {
        const testCell = cells[0];
        report += `üß™ –¢–ï–°–¢ –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–Ø –Ø–ß–ï–ô–ö–ò "${testCell}":\n`;
        
        // –¢–µ—Å—Ç —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        try {
          const { playCellAudio } = await import('@/utils/cellAudioPlayer');
          const success = await playCellAudio(testCell);
          report += `  –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: ${success ? '–†–ê–ë–û–¢–ê–ï–¢ ‚úÖ' : '–ù–ï –†–ê–ë–û–¢–ê–ï–¢ ‚ùå'}\n`;
        } catch (e) {
          report += `  –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –û–®–ò–ë–ö–ê ‚ùå - ${e.message}\n`;
        }
      } else {
        report += `‚ùå –ù–ï–¢ –Ø–ß–ï–ï–ö –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø!\n`;
        report += `üí° –ó–∞–≥—Ä—É–∑–∏—Ç–µ MP3 —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã" –≤—ã—à–µ\n`;
      }
      
    } catch (error) {
      report += `‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${error.message}\n`;
    }
    
    alert(report);
    console.log(report);
  };

  return (
    <>
      {/* –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê */}
      <div className="bg-red-50 rounded-lg p-4 mt-4 border border-red-200">
        <h4 className="font-medium text-red-800 mb-2">–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:</h4>
        <button
          onClick={handleEmergencyDiagnostic}
          className="w-full px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 text-sm font-medium"
        >
          üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
        </button>
      </div>

      {/* –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –ö–ù–û–ü–ö–ê */}
      <div className="mt-4 p-3 bg-yellow-50 rounded-lg border border-yellow-200">
        <button
          onClick={handleDetailedDiagnostic}
          className="w-full px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 text-sm font-medium"
        >
          üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –æ–∑–≤—É—á–∫–∏
        </button>
      </div>
    </>
  );
};