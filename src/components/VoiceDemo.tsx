import React from 'react';
import Icon from '@/components/ui/icon';
import { 
  playErrorSound, 
  playCellNumber, 
  playGoodsInfo,
  playPaymentOnDelivery,
  playCheckGoodUnderCamera,
  playThanksAndRate,
  playFullDeliveryScenario,
  getCurrentVoiceAssistant
} from '@/utils/voiceAPI';

interface VoiceDemoProps {
  isOpen?: boolean;
  onClose?: () => void;
}

export const VoiceDemo: React.FC<VoiceDemoProps> = ({ 
  isOpen = false, 
  onClose 
}) => {
  const [isPlaying, setIsPlaying] = React.useState<string | null>(null);
  const [voiceInfo, setVoiceInfo] = React.useState(getCurrentVoiceAssistant());

  React.useEffect(() => {
    if (isOpen) {
      setVoiceInfo(getCurrentVoiceAssistant());
    }
  }, [isOpen]);

  const playSound = async (soundId: string, playFunction: () => Promise<boolean>) => {
    if (isPlaying) return;
    
    setIsPlaying(soundId);
    try {
      const success = await playFunction();
      console.log(`–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ ${soundId}: ${success ? '—É—Å–ø–µ—à–Ω–æ' : '–Ω–µ—É–¥–∞—á–Ω–æ'}`);
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è ${soundId}:`, error);
    } finally {
      setIsPlaying(null);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg shadow-xl max-w-3xl w-full mx-4 max-h-[90vh] overflow-hidden">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex items-center justify-between p-6 border-b">
          <h2 className="text-xl font-semibold text-gray-900">
            –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–π –æ–∑–≤—É—á–∫–∏
          </h2>
          <button
            onClick={onClose}
            className="p-2 hover:bg-gray-100 rounded-full"
          >
            <Icon name="X" size={20} />
          </button>
        </div>

        <div className="p-6 overflow-y-auto">
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–º–æ—â–Ω–∏–∫–µ */}
          <div className="bg-blue-50 rounded-lg p-4 mb-6">
            <h3 className="font-medium text-blue-900 mb-2">–¢–µ–∫—É—â–∏–π –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫</h3>
            <div className="text-sm text-blue-700 space-y-1">
              <div>üé§ –ü–æ–º–æ—â–Ω–∏–∫: {voiceInfo.info?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}</div>
              <div>üìù –û–ø–∏—Å–∞–Ω–∏–µ: {voiceInfo.info?.description}</div>
              <div>üîä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–≤—É–∫–æ–≤: {voiceInfo.loadedSounds.length}</div>
              <div>üíΩ –†–∞–∑–º–µ—Ä: {voiceInfo.storageInfo.totalSize}</div>
            </div>
          </div>

          {/* –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–≤—É–∫–∏ */}
          <div className="mb-8">
            <h3 className="text-lg font-medium text-gray-900 mb-4 flex items-center">
              <Icon name="AlertTriangle" size={20} className="mr-2 text-orange-500" />
              –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–≤—É–∫–∏
            </h3>
            <div className="grid grid-cols-1 gap-3">
              <button
                onClick={() => playSound('error_sound', playErrorSound)}
                disabled={isPlaying !== null}
                className={`p-4 border rounded-lg text-left hover:bg-gray-50 transition-colors ${
                  isPlaying === 'error_sound' ? 'bg-blue-50 border-blue-300' : 'border-gray-200'
                }`}
              >
                <div className="flex items-center justify-between">
                  <div>
                    <div className="font-medium">üö® –ó–≤—É–∫ –æ—à–∏–±–∫–∏</div>
                    <div className="text-sm text-gray-600">–ü—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ QR-–∫–æ–¥–∞</div>
                  </div>
                  {isPlaying === 'error_sound' ? (
                    <Icon name="Loader2" size={20} className="animate-spin text-blue-500" />
                  ) : (
                    <Icon name="Play" size={20} className="text-gray-400" />
                  )}
                </div>
              </button>
            </div>
          </div>

          {/* –û–∑–≤—É—á–∫–∞ —è—á–µ–µ–∫ */}
          <div className="mb-8">
            <h3 className="text-lg font-medium text-gray-900 mb-4 flex items-center">
              <Icon name="Grid3X3" size={20} className="mr-2 text-green-500" />
              –û–∑–≤—É—á–∫–∞ —è—á–µ–µ–∫
            </h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
              {['A1', 'B15', '126', '999'].map(cellNumber => (
                <button
                  key={cellNumber}
                  onClick={() => playSound(`cell_${cellNumber}`, () => playCellNumber(cellNumber))}
                  disabled={isPlaying !== null}
                  className={`p-3 border rounded-lg text-center hover:bg-gray-50 transition-colors ${
                    isPlaying === `cell_${cellNumber}` ? 'bg-blue-50 border-blue-300' : 'border-gray-200'
                  }`}
                >
                  <div className="font-medium">üè† {cellNumber}</div>
                  {isPlaying === `cell_${cellNumber}` && (
                    <Icon name="Loader2" size={16} className="animate-spin text-blue-500 mx-auto mt-2" />
                  )}
                </button>
              ))}
            </div>
          </div>

          {/* –û–∑–≤—É—á–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ */}
          <div className="mb-8">
            <h3 className="text-lg font-medium text-gray-900 mb-4 flex items-center">
              <Icon name="Package" size={20} className="mr-2 text-purple-500" />
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö
            </h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
              {[1, 3, 5, 21].map(count => (
                <button
                  key={count}
                  onClick={() => playSound(`goods_${count}`, () => playGoodsInfo(count))}
                  disabled={isPlaying !== null}
                  className={`p-3 border rounded-lg text-center hover:bg-gray-50 transition-colors ${
                    isPlaying === `goods_${count}` ? 'bg-blue-50 border-blue-300' : 'border-gray-200'
                  }`}
                >
                  <div className="font-medium">üì¶ {count}</div>
                  <div className="text-xs text-gray-600 mt-1">
                    {count === 1 ? '—Ç–æ–≤–∞—Ä' : count <= 4 ? '—Ç–æ–≤–∞—Ä–∞' : '—Ç–æ–≤–∞—Ä–æ–≤'}
                  </div>
                  {isPlaying === `goods_${count}` && (
                    <Icon name="Loader2" size={16} className="animate-spin text-blue-500 mx-auto mt-2" />
                  )}
                </button>
              ))}
            </div>
          </div>

          {/* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–≤—É–∫–∏ */}
          <div className="mb-8">
            <h3 className="text-lg font-medium text-gray-900 mb-4 flex items-center">
              <Icon name="MessageSquare" size={20} className="mr-2 text-blue-500" />
              –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            </h3>
            <div className="grid grid-cols-1 gap-3">
              <button
                onClick={() => playSound('payment_delivery', playPaymentOnDelivery)}
                disabled={isPlaying !== null}
                className={`p-4 border rounded-lg text-left hover:bg-gray-50 transition-colors ${
                  isPlaying === 'payment_delivery' ? 'bg-blue-50 border-blue-300' : 'border-gray-200'
                }`}
              >
                <div className="flex items-center justify-between">
                  <div>
                    <div className="font-medium">üí∞ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</div>
                    <div className="text-sm text-gray-600">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–ø–æ—Å–æ–±–µ –æ–ø–ª–∞—Ç—ã</div>
                  </div>
                  {isPlaying === 'payment_delivery' ? (
                    <Icon name="Loader2" size={20} className="animate-spin text-blue-500" />
                  ) : (
                    <Icon name="Play" size={20} className="text-gray-400" />
                  )}
                </div>
              </button>

              <button
                onClick={() => playSound('check_camera', playCheckGoodUnderCamera)}
                disabled={isPlaying !== null}
                className={`p-4 border rounded-lg text-left hover:bg-gray-50 transition-colors ${
                  isPlaying === 'check_camera' ? 'bg-blue-50 border-blue-300' : 'border-gray-200'
                }`}
              >
                <div className="flex items-center justify-between">
                  <div>
                    <div className="font-medium">üì∑ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä</div>
                    <div className="text-sm text-gray-600">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–≤–∞—Ä –ø–æ–¥ –∫–∞–º–µ—Ä–æ–π</div>
                  </div>
                  {isPlaying === 'check_camera' ? (
                    <Icon name="Loader2" size={20} className="animate-spin text-blue-500" />
                  ) : (
                    <Icon name="Play" size={20} className="text-gray-400" />
                  )}
                </div>
              </button>

              <button
                onClick={() => playSound('thanks_rate', playThanksAndRate)}
                disabled={isPlaying !== null}
                className={`p-4 border rounded-lg text-left hover:bg-gray-50 transition-colors ${
                  isPlaying === 'thanks_rate' ? 'bg-blue-50 border-blue-300' : 'border-gray-200'
                }`}
              >
                <div className="flex items-center justify-between">
                  <div>
                    <div className="font-medium">‚≠ê –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑</div>
                    <div className="text-sm text-gray-600">–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ—Å—å–±–∞ –æ—Ü–µ–Ω–∏—Ç—å PickPoint</div>
                  </div>
                  {isPlaying === 'thanks_rate' ? (
                    <Icon name="Loader2" size={20} className="animate-spin text-blue-500" />
                  ) : (
                    <Icon name="Play" size={20} className="text-gray-400" />
                  )}
                </div>
              </button>
            </div>
          </div>

          {/* –ü–æ–ª–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π */}
          <div className="mb-6">
            <h3 className="text-lg font-medium text-gray-900 mb-4 flex items-center">
              <Icon name="Play" size={20} className="mr-2 text-red-500" />
              –ü–æ–ª–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–¥–∞—á–∏
            </h3>
            <button
              onClick={() => playSound('full_scenario', () => playFullDeliveryScenario('A1', 3, true))}
              disabled={isPlaying !== null}
              className={`w-full p-6 border-2 border-dashed rounded-lg text-center hover:bg-gray-50 transition-colors ${
                isPlaying === 'full_scenario' ? 'bg-blue-50 border-blue-300' : 'border-gray-300'
              }`}
            >
              <div className="flex items-center justify-center space-x-3">
                {isPlaying === 'full_scenario' ? (
                  <Icon name="Loader2" size={24} className="animate-spin text-blue-500" />
                ) : (
                  <Icon name="Play" size={24} className="text-gray-500" />
                )}
                <div>
                  <div className="font-medium text-lg">üé¨ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π</div>
                  <div className="text-sm text-gray-600 mt-1">
                    –Ø—á–µ–π–∫–∞ A1 ‚Üí 3 —Ç–æ–≤–∞—Ä–∞ ‚Üí –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ ‚Üí –ü—Ä–æ–≤–µ—Ä–∫–∞ ‚Üí –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
                  </div>
                </div>
              </div>
            </button>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="bg-yellow-50 rounded-lg p-4">
            <h4 className="font-medium text-yellow-800 mb-2">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
            <ul className="text-sm text-yellow-700 space-y-1 list-disc list-inside">
              <li>–î–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ MP3 —Ñ–∞–π–ª—ã</li>
              <li>–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ –æ–∑–≤—É—á–∫—É —è—á–µ–µ–∫</li>
              <li>–ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ñ–∞–π–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏ –±—Ä–∞—É–∑–µ—Ä–∞</li>
              <li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "–ì–æ–ª–æ—Å" –≤ —à–∞–ø–∫–µ</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};