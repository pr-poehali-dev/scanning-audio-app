import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';
import Icon from '@/components/ui/icon';

interface AudioTestPanelProps {
  playAudio: (audioName: string) => void;
  customAudioFiles: Record<string, string>;
  isVisible?: boolean;
  onToggle?: () => void;
}

const AudioTestPanel = ({ 
  playAudio, 
  customAudioFiles, 
  isVisible = false, 
  onToggle 
}: AudioTestPanelProps) => {
  const [currentlyPlaying, setCurrentlyPlaying] = useState<string>('');

  // –¢–µ—Å—Ç–æ–≤—ã–µ –∞—É–¥–∏–æ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const testCategories = {
    'delivery': {
      title: 'üì¶ –í—ã–¥–∞—á–∞',
      color: 'bg-blue-50 border-blue-200',
      audios: [
        'delivery-–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –û—Ü–µ–Ω–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏!',
        '–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –û—Ü–µ–Ω–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏!',
        'delivery-–í–µ—Ä–Ω–∏—Ç–µ –Ω–∞ —è—á–µ–π–∫—É',
        '–í–µ—Ä–Ω–∏—Ç–µ –Ω–∞ —è—á–µ–π–∫—É',
        'discount',
        '–¢–æ–≤–∞—Ä—ã —Å–æ —Å–æ —Å–∫–∏–¥–∫–æ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –í–ë –∫–æ—à–µ–ª–µ–∫',
        '123', '67', '234', '345', '156', '42', '101', '482'
      ]
    },
    'acceptance': {
      title: 'üì• –ü—Ä–∏–µ–º–∫–∞',
      color: 'bg-green-50 border-green-200',
      audios: [
        'acceptance-–ü—Ä–∏–Ω—è—Ç–æ –≤ –ü–í–ó',
        '–ü—Ä–∏–Ω—è—Ç–æ –≤ –ü–í–ó',
        'acceptance-–û—à–∏–±–∫–∞ –ø—Ä–∏–µ–º–∫–∏',
        '–û—à–∏–±–∫–∞ –ø—Ä–∏–µ–º–∫–∏',
        'acceptance-scan-success',
        'acceptance-—Ç–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω',
        'acceptance-–¢–æ–≤–∞—Ä –ø–æ–≤—Ä–µ–∂–¥–µ–Ω',
        'acceptance-–¢–æ–≤–∞—Ä –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω'
      ]
    },
    'returns': {
      title: '‚Ü©Ô∏è –í–æ–∑–≤—Ä–∞—Ç',
      color: 'bg-orange-50 border-orange-200',
      audios: [
        'returns-–í–æ–∑–≤—Ä–∞—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω',
        '–í–æ–∑–≤—Ä–∞—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω',
        'returns-–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞',
        '–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞',
        'returns-scan-success',
        'returns-—Ç–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω',
        'returns-–°—É–º–º–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞',
        'returns-–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
      ]
    },
    'general': {
      title: 'üîä –û–±—â–∏–µ',
      color: 'bg-gray-50 border-gray-200',
      audios: [
        'general-–û–±—â–∏–π —Å–∏–≥–Ω–∞–ª',
        '–û–±—â–∏–π —Å–∏–≥–Ω–∞–ª',
        'general-–û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã',
        'scan-start',
        'scan-success',
        'error',
        'phone-required'
      ]
    }
  };

  const handlePlayAudio = async (audioName: string) => {
    setCurrentlyPlaying(audioName);
    console.log(`üß™ –¢–ï–°–¢ –ê–£–î–ò–û: –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ "${audioName}"`);
    
    try {
      if (customAudioFiles[audioName]) {
        await playAudio(audioName);
        console.log(`‚úÖ –¢–ï–°–¢: –£—Å–ø–µ—à–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–ª–∏ "${audioName}"`);
      } else {
        console.log(`‚ùå –¢–ï–°–¢: –ê—É–¥–∏–æ—Ñ–∞–π–ª "${audioName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        console.log('üìÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã:', Object.keys(customAudioFiles));
      }
    } catch (error) {
      console.log(`‚ùå –¢–ï–°–¢: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ "${audioName}":`, error);
    } finally {
      setTimeout(() => setCurrentlyPlaying(''), 2000);
    }
  };

  const playSequentialTest = async (category: keyof typeof testCategories) => {
    const audios = testCategories[category].audios;
    console.log(`üéµ –¢–ï–°–¢: –ó–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}"`);
    
    for (const audioName of audios) {
      if (customAudioFiles[audioName]) {
        console.log(`üîä –¢–ï–°–¢: –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º "${audioName}"`);
        setCurrentlyPlaying(audioName);
        await handlePlayAudio(audioName);
        await new Promise(resolve => setTimeout(resolve, 1500));
      }
    }
    
    setCurrentlyPlaying('');
    console.log(`‚úÖ –¢–ï–°–¢: –ó–∞–≤–µ—Ä—à–µ–Ω —Ç–µ—Å—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${category}"`);
  };

  const getAudioStats = () => {
    const totalPossible = Object.values(testCategories).reduce((sum, cat) => sum + cat.audios.length, 0);
    const totalAvailable = Object.values(testCategories).reduce((sum, cat) => 
      sum + cat.audios.filter(audio => customAudioFiles[audio]).length, 0
    );
    
    return { totalPossible, totalAvailable };
  };

  const { totalPossible, totalAvailable } = getAudioStats();

  if (!isVisible) {
    return (
      <div className="fixed bottom-4 right-4 z-50">
        <Button
          onClick={onToggle}
          size="sm"
          variant="outline"
          className="bg-white shadow-lg"
        >
          <Icon name="Volume2" size={16} className="mr-2" />
          –¢–µ—Å—Ç –∞—É–¥–∏–æ
        </Button>
      </div>
    );
  }

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
      <Card className="w-full max-w-4xl max-h-[90vh] overflow-hidden">
        <CardHeader className="flex flex-row items-center justify-between">
          <CardTitle className="flex items-center gap-2">
            <Icon name="Volume2" size={24} />
            –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∑–≤—É—á–∫–∏ –ü–í–ó
          </CardTitle>
          <Button onClick={onToggle} size="sm" variant="outline">
            <Icon name="X" size={16} />
          </Button>
        </CardHeader>
        
        <CardContent className="overflow-y-auto">
          {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="mb-6 p-4 bg-blue-50 rounded-lg">
            <div className="flex items-center justify-between mb-2">
              <span className="font-medium">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤:</span>
              <span className={`px-3 py-1 rounded-full text-sm ${
                totalAvailable > totalPossible / 2 ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
              }`}>
                {totalAvailable} / {totalPossible}
              </span>
            </div>
            <div className="text-sm text-gray-600">
              {totalAvailable === 0 
                ? '‚ö†Ô∏è –ê—É–¥–∏–æ—Ñ–∞–π–ª—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –¥–ª—è –∫–∞–∂–¥–æ–π –≤–∫–ª–∞–¥–∫–∏.'
                : `‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${Math.round(totalAvailable / totalPossible * 100)}% –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤`
              }
            </div>
          </div>

          {/* –¢–µ—Å—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-4">
            {Object.entries(testCategories).map(([key, category]) => (
              <Card key={key} className={`${category.color}`}>
                <CardHeader className="pb-3">
                  <CardTitle className="text-lg flex items-center justify-between">
                    <span>{category.title}</span>
                    <Button
                      onClick={() => playSequentialTest(key as keyof typeof testCategories)}
                      size="sm"
                      variant="outline"
                      disabled={currentlyPlaying !== ''}
                    >
                      <Icon name="Play" size={14} className="mr-1" />
                      –¢–µ—Å—Ç –≤—Å–µ—Ö
                    </Button>
                  </CardTitle>
                </CardHeader>
                
                <CardContent>
                  <div className="grid grid-cols-1 gap-2">
                    {category.audios.map((audioName, index) => {
                      const isAvailable = customAudioFiles[audioName];
                      const isPlaying = currentlyPlaying === audioName;
                      
                      return (
                        <Button
                          key={index}
                          onClick={() => handlePlayAudio(audioName)}
                          variant={isAvailable ? "default" : "secondary"}
                          size="sm"
                          disabled={!isAvailable || (currentlyPlaying !== '' && !isPlaying)}
                          className={`justify-start text-left h-auto py-2 px-3 ${
                            isPlaying ? 'bg-blue-500 text-white animate-pulse' : ''
                          } ${
                            !isAvailable ? 'opacity-50 cursor-not-allowed' : ''
                          }`}
                        >
                          <div className="flex items-center gap-2 w-full">
                            <Icon 
                              name={isAvailable ? (isPlaying ? "Volume2" : "Play") : "VolumeX"} 
                              size={14} 
                            />
                            <span className="flex-1 truncate text-xs">
                              {audioName}
                            </span>
                            {isAvailable && (
                              <span className="text-xs bg-green-100 text-green-700 px-1 rounded">‚úì</span>
                            )}
                          </div>
                        </Button>
                      );
                    })}
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
          <div className="mt-6 p-4 bg-gray-50 rounded-lg">
            <h3 className="font-medium mb-2">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:</h3>
            <ul className="text-sm text-gray-600 space-y-1">
              <li>‚Ä¢ <strong>–ó–µ–ª–µ–Ω—ã–µ –∫–Ω–æ–ø–∫–∏</strong> - –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é</li>
              <li>‚Ä¢ <strong>–°–µ—Ä—ã–µ –∫–Ω–æ–ø–∫–∏</strong> - –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö</li>
              <li>‚Ä¢ <strong>"–¢–µ—Å—Ç –≤—Å–µ—Ö"</strong> - –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏</li>
              <li>‚Ä¢ –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ <strong>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –û–∑–≤—É—á–∫–∞</strong> –¥–ª—è –∫–∞–∂–¥–æ–π –≤–∫–ª–∞–¥–∫–∏</li>
              <li>‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–æ–ª–∂–Ω—ã —Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –≤ –∫–Ω–æ–ø–∫–∞—Ö</li>
            </ul>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default AudioTestPanel;