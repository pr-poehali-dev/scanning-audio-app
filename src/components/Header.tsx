import React, { useState } from 'react';
import Icon from '@/components/ui/icon';
import { CellAudioUploader } from '@/components/CellAudioUploader';
import AudioTestDebug from '@/components/AudioTestDebug';

interface HeaderProps {
  onMenuOpen: () => void;
  onSettingsOpen: () => void;
  activeTab: string;
  setActiveTab: (tab: string) => void;
}

const Header = ({ onMenuOpen, onSettingsOpen, activeTab, setActiveTab }: HeaderProps) => {
  const [isAudioUploaderOpen, setIsAudioUploaderOpen] = useState(false);
  const [showDebug, setShowDebug] = useState(false);
  return (
    <div className="bg-white shadow-sm border-b">
      <div className="max-w-6xl mx-auto px-6">
        <div className="flex items-center justify-between py-3">
          {/* Left side - WB logo, hamburger menu and search */}
          <div className="flex items-center space-x-3">
            {/* WB Logo */}
            <div className="flex items-center">
              <img 
                src="https://cdn.poehali.dev/files/2f0c5a81-97a5-4c4d-8512-d9a07795ab42.png" 
                alt="WB" 
                className="w-8 h-8 rounded-lg"
              />
            </div>
            <button 
              className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-md"
              onClick={onMenuOpen}
            >
              <Icon name="AlignJustify" size={20} />
            </button>
            <button className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-md">
              <Icon name="MessageSquare" size={20} />
            </button>
            <button className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-md">
              <Icon name="Search" size={20} />
            </button>
          </div>

          {/* Center - Main Navigation Tabs */}
          <div className="flex items-center space-x-6">
            <button
              onClick={() => setActiveTab('delivery')}
              className={`relative py-3 px-4 text-sm font-medium transition-colors ${
                activeTab === 'delivery'
                  ? 'text-purple-600'
                  : 'text-gray-700 hover:text-gray-900'
              }`}
            >
              <div className="flex items-center space-x-2">
                <span>–í—ã–¥–∞—á–∞</span>
                <div className="w-5 h-5 bg-gray-600 text-white text-xs rounded-full flex items-center justify-center">
                  1
                </div>
              </div>
              {activeTab === 'delivery' && (
                <div className="absolute bottom-0 left-0 right-0 h-0.5 bg-purple-600" />
              )}
            </button>
            
            <button
              onClick={() => setActiveTab('acceptance')}
              className={`relative py-3 px-4 text-sm font-medium transition-colors ${
                activeTab === 'acceptance'
                  ? 'text-purple-600'
                  : 'text-gray-700 hover:text-gray-900'
              }`}
            >
              –ü—Ä–∏–µ–º–∫–∞
              {activeTab === 'acceptance' && (
                <div className="absolute bottom-0 left-0 right-0 h-0.5 bg-purple-600" />
              )}
            </button>
            
            <button
              onClick={() => setActiveTab('returns')}
              className={`relative py-3 px-4 text-sm font-medium transition-colors ${
                activeTab === 'returns'
                  ? 'text-purple-600'
                  : 'text-gray-700 hover:text-gray-900'
              }`}
            >
              –í–æ–∑–≤—Ä–∞—Ç
              {activeTab === 'returns' && (
                <div className="absolute bottom-0 left-0 right-0 h-0.5 bg-purple-600" />
              )}
            </button>
          </div>

          {/* Right side - additional icons */}
          <div className="flex items-center space-x-3">
            <button 
              className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-md"
              onClick={onSettingsOpen}
            >
              <Icon name="Grid3X3" size={20} />
            </button>
            <button className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-md">
              <Icon name="RotateCcw" size={20} />
            </button>
            <button className="p-2 text-gray-600 hover:text-gray-800 hover:bg-gray-50 rounded-md">
              <Icon name="MessageCircle" size={20} />
            </button>
            
            {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ —è—á–µ–µ–∫ */}
            <button 
              onClick={() => setIsAudioUploaderOpen(true)}
              className="p-2 text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded-md"
              title="–ó–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã —è—á–µ–µ–∫"
            >
              <Icon name="VolumeX" size={20} />
            </button>
            
            {/* –ö–Ω–æ–ø–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∞—É–¥–∏–æ */}
            <button 
              onClick={() => setShowDebug(!showDebug)}
              className="p-2 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-md"
              title="–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞—É–¥–∏–æ —Å–∏—Å—Ç–µ–º—ã"
            >
              <Icon name="Bug" size={20} />
            </button>
            
            {/* –í–†–ï–ú–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–ó–í–£–ß–ö–ò */}
            <button 
              onClick={async () => {
                console.log('üöÄ === –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –û–ó–í–£–ß–ö–ò ===');
                
                // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
                const storages = [
                  'wb-audio-files',
                  'wb-audio-files-backup',
                  'wb-audio-files-cells-backup',
                  'customAudioFiles',
                  'audioFiles'
                ];
                
                let report = 'üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê LOCALSTORAGE:\n\n';
                let foundCellFiles = [];
                
                storages.forEach(key => {
                  const data = localStorage.getItem(key);
                  if (data) {
                    try {
                      const files = JSON.parse(data);
                      const keys = Object.keys(files);
                      const cellKeys = keys.filter(k => k.includes('cell-') || /^\d+$/.test(k));
                      
                      report += `üì¶ ${key}: ${keys.length} —Ñ–∞–π–ª–æ–≤ (${cellKeys.length} —è—á–µ–µ–∫)\n`;
                      if (cellKeys.length > 0) {
                        report += `   üè† –Ø—á–µ–π–∫–∏: ${cellKeys.slice(0, 3).join(', ')}${cellKeys.length > 3 ? '...' : ''}\n`;
                        foundCellFiles.push(...cellKeys.map(k => ({ storage: key, key: k, url: files[k] })));
                      }
                    } catch (e) {
                      report += `‚ùå ${key}: –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞\n`;
                    }
                  } else {
                    report += `‚ùå ${key}: –ù–ï–¢ –î–ê–ù–ù–´–•\n`;
                  }
                });
                
                report += `\nüéØ –í–°–ï–ì–û –ù–ê–ô–î–ï–ù–û –§–ê–ô–õ–û–í –Ø–ß–ï–ï–ö: ${foundCellFiles.length}\n\n`;
                
                // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é playCellAudio
                if (foundCellFiles.length > 0) {
                  report += 'üß™ –¢–ï–°–¢ –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–Ø:\n';
                  const testFile = foundCellFiles[0];
                  report += `–¢–µ—Å—Ç–∏—Ä—É—é —Ñ–∞–π–ª: ${testFile.key} –∏–∑ ${testFile.storage}\n`;
                  
                  try {
                    // –ü—Ä—è–º–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
                    const audio = new Audio(testFile.url);
                    await audio.play();
                    report += `‚úÖ –ü–†–Ø–ú–û–ï –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢!\n`;
                    setTimeout(() => audio.pause(), 1000);
                  } catch (directError) {
                    report += `‚ùå –ü—Ä—è–º–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: ${directError.message}\n`;
                    report += `‚ùå URL —Ç–∏–ø: ${testFile.url.startsWith('blob:') ? 'BLOB' : testFile.url.startsWith('data:') ? 'BASE64' : 'OTHER'}\n`;
                  }
                  
                  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É
                  try {
                    const { playCellAudio } = await import('/src/utils/cellAudioPlayer');
                    const cellNumber = testFile.key.replace('cell-', '');
                    const success = await playCellAudio(cellNumber);
                    report += success ? `‚úÖ playCellAudio –†–ê–ë–û–¢–ê–ï–¢ –¥–ª—è ${cellNumber}!\n` : `‚ùå playCellAudio –ù–ï –†–ê–ë–û–¢–ê–ï–¢ –¥–ª—è ${cellNumber}\n`;
                  } catch (systemError) {
                    report += `‚ùå –û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã: ${systemError.message}\n`;
                  }
                } else {
                  report += '‚ùå –ù–ï–¢ –§–ê–ô–õ–û–í –î–õ–Ø –¢–ï–°–¢–ê!\n';
                  report += '\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:\n';
                  report += '1. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –§—Ä–∞–∑—ã –¥–ª—è –æ–∑–≤—É—á–∫–∏ ‚Üí –í—ã–¥–∞—á–∞\n';
                  report += '2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º cell-126.mp3\n';
                  report += '3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É\n';
                }
                
                alert(report);
                console.log(report);
              }}
              className="p-1 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-md text-xs font-bold"
              title="–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–∑–≤—É—á–∫–∏ —è—á–µ–µ–∫"
            >
              üîç
            </button>
          </div>
        </div>
      </div>
      
      {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ */}
      <CellAudioUploader 
        isOpen={isAudioUploaderOpen}
        onClose={() => setIsAudioUploaderOpen(false)}
      />
      
      {/* –ü–∞–Ω–µ–ª—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ */}
      {showDebug && (
        <div className="border-t bg-gray-50 p-4">
          <AudioTestDebug />
        </div>
      )}
    </div>
  );
};

export default Header;