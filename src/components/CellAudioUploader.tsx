import React, { useState } from 'react';
import { audioManager } from '@/utils/simpleAudioManager';
import { objectUrlAudioManager } from '@/utils/objectUrlAudioManager';
import { saveCellAudioToMainSystem, getCellsFromMainSystem } from '@/utils/cellAudioIntegration';
import Icon from '@/components/ui/icon';

interface CellAudioUploaderProps {
  isOpen?: boolean;
  onClose?: () => void;
}

export const CellAudioUploader: React.FC<CellAudioUploaderProps> = ({ 
  isOpen = false, 
  onClose 
}) => {
  const [uploading, setUploading] = useState(false);
  const [uploadedCells, setUploadedCells] = useState<string[]>([]);
  const [dragActive, setDragActive] = useState(false);

  const handleFileUpload = async (files: FileList) => {
    setUploading(true);
    const successCells: string[] = [];
    
    try {
      for (const file of Array.from(files)) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∞—É–¥–∏–æ —Ñ–∞–π–ª
        if (!file.type.startsWith('audio/')) {
          console.warn(`‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª ${file.name}: –Ω–µ –∞—É–¥–∏–æ`);
          continue;
        }
        
        // –£–ú–ù–û–ï –ò–ó–í–õ–ï–ß–ï–ù–ò–ï –ù–û–ú–ï–†–ê –Ø–ß–ï–ô–ö–ò –ò–ó –ò–ú–ï–ù–ò –§–ê–ô–õ–ê
        let cellNumber = '';
        const fileName = file.name.toLowerCase();
        
        console.log(`üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ñ–∞–π–ª: ${file.name}`);
        
        // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
        const patterns = [
          // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
          /(?:cell[-_]?)([a-z]\d+)/i,           // cell-A1, cell_A1, cellA1
          /(?:—è—á–µ–π–∫–∞[-_]?)([a-z]\d+)/i,         // —è—á–µ–π–∫–∞-A1, —è—á–µ–π–∫–∞_A1
          /^([a-z]\d+)/i,                       // A1.mp3, B15.wav
          /(?:–Ω–æ–º–µ—Ä[-_]?)(\d+)/i,               // –Ω–æ–º–µ—Ä-126, –Ω–æ–º–µ—Ä_126
          /(?:number[-_]?)(\d+)/i,              // number-126, number_126
          /(?:cell[-_]?)(\d+)/i,                // cell-126, cell_126
          /(?:—è—á–µ–π–∫–∞[-_]?)(\d+)/i,              // —è—á–µ–π–∫–∞-126, —è—á–µ–π–∫–∞_126
          /^(\d+)/,                             // 126.mp3, 999.wav
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
          /(?:box[-_]?)([a-z]\d+)/i,            // box-A1, box_A1
          /(?:slot[-_]?)([a-z]\d+)/i,           // slot-A1, slot_A1
          /(?:compartment[-_]?)([a-z]\d+)/i,    // compartment-A1
          /(?:locker[-_]?)([a-z]\d+)/i,         // locker-A1
          
          // –î–ª—è —á–∏—Å–ª–æ–≤—ã—Ö —è—á–µ–µ–∫
          /(?:box[-_]?)(\d+)/i,                 // box-126, box_126
          /(?:slot[-_]?)(\d+)/i,                // slot-126, slot_126
          /(?:compartment[-_]?)(\d+)/i,         // compartment-126
          /(?:locker[-_]?)(\d+)/i,              // locker-126
        ];
        
        // –ü—Ä–æ–±—É–µ–º –∫–∞–∂–¥—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
        for (const pattern of patterns) {
          const match = fileName.match(pattern);
          if (match && match[1]) {
            cellNumber = match[1].toUpperCase();
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ "${cellNumber}" –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É: ${pattern}`);
            break;
          }
        }
        
        // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ - –ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –ª—é–±—ã–µ –±—É–∫–≤—ã+—Ü–∏—Ñ—Ä—ã –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—ã
        if (!cellNumber) {
          // –ò—â–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –±—É–∫–≤–∞+—Ü–∏—Ñ—Ä—ã
          const letterNumberMatch = fileName.match(/([a-z]\d+)/i);
          if (letterNumberMatch) {
            cellNumber = letterNumberMatch[1].toUpperCase();
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ "${cellNumber}" –∫–∞–∫ –±—É–∫–≤–∞+—Ü–∏—Ñ—Ä—ã`);
          } else {
            // –ò—â–µ–º –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—ã
            const numberMatch = fileName.match(/(\d+)/);
            if (numberMatch) {
              cellNumber = numberMatch[1];
              console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ "${cellNumber}" –∫–∞–∫ —á–∏—Å–ª–æ–≤–æ–π`);
            }
          }
        }
        
        if (!cellNumber) {
          console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞: ${file.name}`);
          console.warn(`üí° –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç: A1.mp3, cell-126.mp3, –∏–ª–∏ 999.mp3`);
          continue;
        }
        
        // –ì–õ–ê–í–ù–ê–Ø –°–ò–°–¢–ï–ú–ê - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ wb-audio-files (–∫–∞–∫ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ–∑–≤—É—á–∫–∏)
        console.log(`üíæ [–ì–õ–ê–í–ù–ê–Ø] –°–æ—Ö—Ä–∞–Ω—è—é ${file.name} –¥–ª—è —è—á–µ–π–∫–∏ ${cellNumber} –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É...`);
        const mainSystemSuccess = await saveCellAudioToMainSystem(cellNumber, file);
        
        // –†–ï–ó–ï–†–í–ù–´–ï –°–ò–°–¢–ï–ú–´
        console.log(`üíæ [–†–ï–ó–ï–†–í] –°–æ—Ö—Ä–∞–Ω—è—é ${file.name} –¥–ª—è —è—á–µ–π–∫–∏ ${cellNumber} —á–µ—Ä–µ–∑ Object URL...`);
        const objectUrlSuccess = await objectUrlAudioManager.saveCellAudio(cellNumber, file);
        
        console.log(`üíæ [–†–ï–ó–ï–†–í] –°–æ—Ö—Ä–∞–Ω—è—é ${file.name} –¥–ª—è —è—á–µ–π–∫–∏ ${cellNumber} —á–µ—Ä–µ–∑ Data URL –º–µ–Ω–µ–¥–∂–µ—Ä...`);
        const dataUrlSuccess = await audioManager.saveCellAudio(cellNumber, file);
        
        if (mainSystemSuccess || objectUrlSuccess || dataUrlSuccess) {
          successCells.push(cellNumber);
          console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª –¥–ª—è —è—á–µ–π–∫–∏ ${cellNumber}:`);
          console.log(`   –ì–ª–∞–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: ${mainSystemSuccess ? '‚úÖ' : '‚ùå'}`);
          console.log(`   Object URL: ${objectUrlSuccess ? '‚úÖ' : '‚ùå'}`);
          console.log(`   Data URL: ${dataUrlSuccess ? '‚úÖ' : '‚ùå'}`);
        } else {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –¥–ª—è —è—á–µ–π–∫–∏ ${cellNumber} –≤–æ –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã`);
        }
      }
      
      setUploadedCells(prev => [...new Set([...prev, ...successCells])]);
      
      if (successCells.length > 0) {
        console.log(`üéâ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${successCells.length} —Ñ–∞–π–ª–æ–≤ —è—á–µ–µ–∫`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const message = `–£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${successCells.length} —Ñ–∞–π–ª–æ–≤!\n\n–Ø—á–µ–π–∫–∏: ${successCells.join(', ')}\n\n–•–æ—Ç–∏—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–≤—É—é —è—á–µ–π–∫—É?`;
        if (window.confirm(message)) {
          handleTestCell(successCells[0]);
        }
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:', error);
    } finally {
      setUploading(false);
    }
  };

  const handleDrop = (e: React.DragEvent) => {
    e.preventDefault();
    setDragActive(false);
    
    if (e.dataTransfer.files) {
      handleFileUpload(e.dataTransfer.files);
    }
  };

  const handleDragOver = (e: React.DragEvent) => {
    e.preventDefault();
    setDragActive(true);
  };

  const handleDragLeave = (e: React.DragEvent) => {
    e.preventDefault();
    setDragActive(false);
  };

  const handleFileInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      handleFileUpload(e.target.files);
    }
  };

  const handleTestCell = async (cellNumber: string) => {
    try {
      console.log(`üéµ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —è—á–µ–π–∫–∏ ${cellNumber}...`);
      
      // –ò–°–ü–û–õ–¨–ó–£–ï–ú –ü–†–ê–í–ò–õ–¨–ù–£–Æ –°–ò–°–¢–ï–ú–£ –û–ó–í–£–ß–ö–ò –Ø–ß–ï–ï–ö
      const { playCellAudio } = await import('@/utils/cellAudioPlayer');
      const success = await playCellAudio(cellNumber);
      
      if (success) {
        console.log(`‚úÖ –Ø—á–µ–π–∫–∞ ${cellNumber} —É—Å–ø–µ—à–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞!`);
      } else {
        console.warn(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —è—á–µ–π–∫—É ${cellNumber}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        const { getAudioEnabledCells } = await import('@/utils/cellAudioPlayer');
        const availableCells = getAudioEnabledCells();
        console.log(`üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —è—á–µ–π–∫–∏:`, availableCells);
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —è—á–µ–π–∫–∏ ${cellNumber}:`, error);
    }
  };

  const getAllCells = () => {
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –≥–ª–∞–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
      const mainCells = getCellsFromMainSystem();
      if (mainCells.length > 0) {
        console.log(`üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ${mainCells.length} —è—á–µ–µ–∫ –∏–∑ –≥–ª–∞–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã`);
        return mainCells;
      }
      
      // –ï—Å–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –Ω–µ—Ç, –±–µ—Ä–µ–º –∏–∑ —Å—Ç–∞—Ä–æ–π
      const oldCells = audioManager.getCellsWithAudio();
      console.log(`üìã –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ${oldCells.length} —è—á–µ–µ–∫ –∏–∑ —Å—Ç–∞—Ä–æ–π —Å–∏—Å—Ç–µ–º—ã`);
      return oldCells;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —è—á–µ–µ–∫:', error);
      return [];
    }
  };

  const getStorageInfo = () => {
    try {
      // –ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º
      const oldInfo = audioManager.getStorageInfo();
      const mainCells = getCellsFromMainSystem();
      
      return {
        totalFiles: oldInfo.totalFiles,
        totalSize: oldInfo.totalSize,
        cellsCount: Math.max(oldInfo.cellsCount, mainCells.length)
      };
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:', error);
      return { totalFiles: 0, totalSize: '0 MB', cellsCount: 0 };
    }
  };

  const clearAllAudio = () => {
    if (window.confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã —è—á–µ–µ–∫?')) {
      audioManager.clearAllAudio();
      setUploadedCells([]);
      console.log('üóëÔ∏è –í—Å–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã');
    }
  };

  if (!isOpen) return null;

  const allCells = getAllCells();
  const storageInfo = getStorageInfo();

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[80vh] overflow-hidden">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex items-center justify-between p-6 border-b">
          <h2 className="text-xl font-semibold text-gray-900">
            –ó–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤ —è—á–µ–µ–∫
          </h2>
          <button
            onClick={onClose}
            className="p-2 hover:bg-gray-100 rounded-full"
          >
            <Icon name="X" size={20} />
          </button>
        </div>

        <div className="p-6 overflow-y-auto">
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ */}
          <div className="bg-blue-50 rounded-lg p-4 mb-6">
            <h3 className="font-medium text-blue-900 mb-2">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ</h3>
            <div className="text-sm text-blue-700 space-y-1">
              <div>üìÅ –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {storageInfo.totalFiles}</div>
              <div>üíΩ –†–∞–∑–º–µ—Ä: {storageInfo.totalSize}</div>
              <div>üè† –Ø—á–µ–µ–∫ —Å –∞—É–¥–∏–æ: {storageInfo.cellsCount}</div>
            </div>
          </div>

          {/* –ó–æ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
          <div
            className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
              dragActive
                ? 'border-blue-500 bg-blue-50'
                : 'border-gray-300 hover:border-gray-400'
            }`}
            onDrop={handleDrop}
            onDragOver={handleDragOver}
            onDragLeave={handleDragLeave}
          >
            {uploading ? (
              <div className="flex items-center justify-center space-x-2">
                <Icon name="Loader2" size={20} className="animate-spin text-blue-500" />
                <span className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤...</span>
              </div>
            ) : (
              <>
                <Icon name="Upload" size={48} className="mx-auto text-gray-400 mb-4" />
                <p className="text-lg font-medium text-gray-700 mb-2">
                  –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã —Å—é–¥–∞
                </p>
                <p className="text-sm text-gray-500 mb-4">
                  –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
                </p>
                <input
                  type="file"
                  multiple
                  accept="audio/*"
                  onChange={handleFileInputChange}
                  className="hidden"
                  id="audio-file-input"
                />
                <label
                  htmlFor="audio-file-input"
                  className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 cursor-pointer"
                >
                  <Icon name="FolderOpen" size={16} className="mr-2" />
                  –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
                </label>
              </>
            )}
          </div>

          {/* –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê */}
          <div className="bg-red-50 rounded-lg p-4 mt-4 border border-red-200">
            <h4 className="font-medium text-red-800 mb-2">–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:</h4>
            <button
              onClick={async () => {
                console.log('üö® === –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ ===');
                
                // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –Ω–∞–ø—Ä—è–º—É—é
                console.log('üì¶ –ü–†–û–í–ï–†–ö–ê LOCALSTORAGE:');
                const keys = Object.keys(localStorage);
                const audioKeys = keys.filter(k => k.includes('audio') || k.includes('cell') || k.includes('wb-'));
                console.log(`–í—Å–µ–≥–æ –∫–ª—é—á–µ–π: ${keys.length}`);
                console.log(`–ê—É–¥–∏–æ –∫–ª—é—á–µ–π: ${audioKeys.length}`);
                audioKeys.forEach(key => {
                  const data = localStorage.getItem(key);
                  const size = data ? Math.round(data.length / 1024) : 0;
                  console.log(`  - ${key}: ${size}KB`);
                  
                  // –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
                  if (key === 'wb-audio-files-unified') {
                    try {
                      const parsed = JSON.parse(data);
                      console.log(`    üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞:`, parsed);
                      console.log(`    üè† –Ø—á–µ–π–∫–∏:`, Object.keys(parsed.cells || {}));
                    } catch (e) {
                      console.log(`    ‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: ${e.message}`);
                    }
                  }
                });
                
                // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
                console.log('\nüß™ –¢–ï–°–¢ –ù–û–í–û–ô –°–ò–°–¢–ï–ú–´:');
                try {
                  const { audioManager } = await import('@/utils/simpleAudioManager');
                  const cells = audioManager.getCellsWithAudio();
                  const info = audioManager.getStorageInfo();
                  
                  console.log(`–Ø—á–µ–µ–∫ –≤ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ: ${cells.length}`);
                  console.log(`–î–æ—Å—Ç—É–ø–Ω—ã–µ —è—á–µ–π–∫–∏:`, cells);
                  console.log(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:`, info);
                  
                  // –¢–µ—Å—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
                  if (cells.length > 0) {
                    const testCell = cells[0];
                    console.log(`üéµ –¢–µ—Å—Ç–∏—Ä—É—é –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —è—á–µ–π–∫–∏ ${testCell}...`);
                    const success = await audioManager.playCellAudio(testCell);
                    console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: ${success ? '–£–°–ü–ï–• ‚úÖ' : '–ü–†–û–í–ê–õ ‚ùå'}`);
                  }
                } catch (error) {
                  console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:', error);
                }
                
                // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
                console.log('\nüéØ –¢–ï–°–¢ –û–°–ù–û–í–ù–û–ô –§–£–ù–ö–¶–ò–ò:');
                try {
                  const { playCellAudio, getAudioEnabledCells } = await import('@/utils/cellAudioPlayer');
                  const enabledCells = getAudioEnabledCells();
                  console.log(`–Ø—á–µ–π–∫–∏ —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é: ${enabledCells.length}`);
                  console.log(`–°–ø–∏—Å–æ–∫:`, enabledCells);
                  
                  if (enabledCells.length > 0) {
                    const testCell = enabledCells[0];
                    console.log(`üéµ –¢–µ—Å—Ç–∏—Ä—É—é –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å —è—á–µ–π–∫–æ–π ${testCell}...`);
                    const success = await playCellAudio(testCell);
                    console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏: ${success ? '–£–°–ü–ï–• ‚úÖ' : '–ü–†–û–í–ê–õ ‚ùå'}`);
                  }
                } catch (error) {
                  console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏:', error);
                }
                
                alert('–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å (F12) –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.');
              }}
              className="w-full px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 text-sm font-medium"
            >
              üö® –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê
            </button>
          </div>

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
          <div className="bg-green-50 rounded-lg p-4 mt-6">
            <h4 className="font-medium text-green-800 mb-3">–ö–∞–∫ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–∑–≤—É—á–∫—É —è—á–µ–µ–∫:</h4>
            
            <div className="space-y-3 text-sm text-green-700">
              <div>
                <div className="font-medium mb-1">–ü—Ä–∞–≤–∏–ª–∞ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤:</div>
                <div className="bg-green-100 rounded p-2 font-mono text-xs space-y-1">
                  <div><code>A1.mp3</code> - —è—á–µ–π–∫–∞ A1</div>
                  <div><code>cell-B15.mp3</code> - —è—á–µ–π–∫–∞ B15</div>
                  <div><code>126.mp3</code> - —è—á–µ–π–∫–∞ 126</div>
                  <div><code>—è—á–µ–π–∫–∞-A25.mp3</code> - —è—á–µ–π–∫–∞ A25</div>
                </div>
              </div>
              
              <div>
                <div className="font-medium mb-1">–ß—Ç–æ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∞—É–¥–∏–æ:</div>
                <div className="bg-green-100 rounded p-2 text-xs">
                  –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—å –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:<br/>
                  <strong>"–Ø—á–µ–π–∫–∞ –ê –æ–¥–∏–Ω"</strong> –∏–ª–∏ <strong>"–ù–æ–º–µ—Ä —Å—Ç–æ –¥–≤–∞–¥—Ü–∞—Ç—å —à–µ—Å—Ç—å"</strong>
                </div>
              </div>
              
              <div>
                <div className="font-medium mb-1">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:</div>
                <ul className="list-disc list-inside text-xs space-y-1">
                  <li>–§–æ—Ä–º–∞—Ç—ã: MP3, WAV, M4A, OGG</li>
                  <li>–†–∞–∑–º–µ—Ä: –¥–æ 2 –ú–ë –Ω–∞ —Ñ–∞–π–ª</li>
                  <li>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –¥–æ 3 —Å–µ–∫—É–Ω–¥</li>
                  <li>–ö–∞—á–µ—Å—Ç–≤–æ: 44.1 –∫–ì—Ü, 128 –∫–±–∏—Ç/—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ</li>
                </ul>
              </div>
            </div>
          </div>
          
          {/* –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã */}
          <div className="bg-blue-50 rounded-lg p-4 mt-4">
            <h4 className="font-medium text-blue-800 mb-2">–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:</h4>
            <ul className="text-sm text-blue-700 space-y-1 list-disc list-inside">
              <li>–ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç—å –ø–∞–ø–∫—É —Å —Ñ–∞–π–ª–∞–º–∏ –ø—Ä—è–º–æ –≤ –æ–∫–Ω–æ</li>
              <li>–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞</li>
              <li>–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏</li>
              <li>–§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—É—Å–∫–µ</li>
            </ul>
          </div>

          {/* –°–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —è—á–µ–µ–∫ */}
          {allCells.length > 0 && (
            <div className="mt-6">
              <div className="flex items-center justify-between mb-3">
                <h4 className="font-medium text-gray-900">
                  –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —è—á–µ–π–∫–∏ ({allCells.length})
                </h4>
                <button
                  onClick={clearAllAudio}
                  className="text-sm text-red-600 hover:text-red-800"
                >
                  –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
                </button>
              </div>
              <div className="grid grid-cols-4 sm:grid-cols-6 md:grid-cols-8 gap-2 max-h-40 overflow-y-auto">
                {allCells.map(cellNumber => (
                  <button
                    key={cellNumber}
                    onClick={() => handleTestCell(cellNumber)}
                    className={`p-2 text-xs rounded border hover:bg-gray-50 transition-colors ${
                      uploadedCells.includes(cellNumber)
                        ? 'bg-green-50 border-green-200 text-green-800'
                        : 'bg-gray-50 border-gray-200 text-gray-700'
                    }`}
                    title={`–ù–∞–∂–º–∏—Ç–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —è—á–µ–π–∫–∏ ${cellNumber}`}
                  >
                    {cellNumber}
                  </button>
                ))}
              </div>
              <p className="text-xs text-gray-500 mt-2">
                üí° –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —è—á–µ–π–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
              </p>
              
              {/* –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –ö–ù–û–ü–ö–ê */}
              <div className="mt-4 p-3 bg-yellow-50 rounded-lg border border-yellow-200">
                <button
                  onClick={async () => {
                    console.log('üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –û–ó–í–£–ß–ö–ò –Ø–ß–ï–ï–ö ===');
                    
                    let report = '–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –û–ó–í–£–ß–ö–ò –Ø–ß–ï–ï–ö:\n\n';
                    
                    try {
                      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º Data URL –º–µ–Ω–µ–¥–∂–µ—Ä
                      const { audioManager, getStorageInfo } = await import('@/utils/simpleAudioManager');
                      const info = getStorageInfo();
                      const cells = audioManager.getCellsWithAudio();
                      
                      report += `üìä DATA URL –°–ò–°–¢–ï–ú–ê:\n`;
                      report += `  –§–∞–π–ª–æ–≤: ${info.totalFiles}\n`;
                      report += `  –Ø—á–µ–µ–∫: ${info.cellsCount}\n`;
                      report += `  –†–∞–∑–º–µ—Ä: ${info.totalSize}\n`;
                      report += `  –î–æ—Å—Ç—É–ø–Ω—ã–µ —è—á–µ–π–∫–∏: ${cells.slice(0, 10).join(', ')}\n\n`;
                      
                      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º Object URL –º–µ–Ω–µ–¥–∂–µ—Ä
                      const { objectUrlAudioManager, getAudioManagerInfo } = await import('@/utils/objectUrlAudioManager');
                      const objInfo = getAudioManagerInfo();
                      const objCells = objectUrlAudioManager.getCellsWithAudio();
                      
                      report += `üìä OBJECT URL –°–ò–°–¢–ï–ú–ê:\n`;
                      report += `  –Ø—á–µ–µ–∫: ${objInfo.cellsCount}\n`;
                      report += `  URLs: ${objInfo.totalUrls}\n`;
                      report += `  –î–æ—Å—Ç—É–ø–Ω—ã–µ —è—á–µ–π–∫–∏: ${objCells.slice(0, 10).join(', ')}\n\n`;
                      
                      // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
                      const { getCellsFromMainSystem } = await import('@/utils/cellAudioIntegration');
                      const mainCells = getCellsFromMainSystem();
                      
                      report += `üìä –ì–õ–ê–í–ù–ê–Ø –°–ò–°–¢–ï–ú–ê (wb-audio-files):\n`;
                      report += `  –Ø—á–µ–µ–∫: ${mainCells.length}\n`;
                      report += `  –î–æ—Å—Ç—É–ø–Ω—ã–µ —è—á–µ–π–∫–∏: ${mainCells.slice(0, 10).join(', ')}\n\n`;
                      
                      // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é —è—á–µ–π–∫—É —á–µ—Ä–µ–∑ –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã
                      if (cells.length > 0) {
                        const testCell = cells[0];
                        report += `üß™ –¢–ï–°–¢ –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–Ø –Ø–ß–ï–ô–ö–ò "${testCell}":\n`;
                        
                        // –¢–µ—Å—Ç —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
                        try {
                          const { playCellAudio } = await import('@/utils/cellAudioPlayer');
                          const success = await playCellAudio(testCell);
                          report += `  –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: ${success ? '–†–ê–ë–û–¢–ê–ï–¢ ‚úÖ' : '–ù–ï –†–ê–ë–û–¢–ê–ï–¢ ‚ùå'}\n`;
                        } catch (e) {
                          report += `  –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –û–®–ò–ë–ö–ê ‚ùå - ${e.message}\n`;
                        }
                      } else {
                        report += `‚ùå –ù–ï–¢ –Ø–ß–ï–ï–ö –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø!\n`;
                        report += `üí° –ó–∞–≥—Ä—É–∑–∏—Ç–µ MP3 —Ñ–∞–π–ª—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã" –≤—ã—à–µ\n`;
                      }
                      
                    } catch (error) {
                      report += `‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: ${error.message}\n`;
                    }
                    
                    alert(report);
                    console.log(report);
                  }}
                  className="w-full px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 text-sm font-medium"
                >
                  üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –æ–∑–≤—É—á–∫–∏
                </button>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};