import { useState, useRef } from 'react';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';
import { useAudio } from '@/hooks/useAudio';

interface AudioFiles {
  delivery: File[];
  receiving: File[];
  return: File[];
  cells: File[];
}

interface AudioSettingsProps {
  onClose: () => void;
  onAudioFilesUpdate: (files: AudioFiles) => void;
  existingFiles: AudioFiles;
}

export const AudioSettings = ({ onClose, onAudioFilesUpdate, existingFiles }: AudioSettingsProps) => {
  const [audioFiles, setAudioFiles] = useState<AudioFiles>(existingFiles);
  const [uploading, setUploading] = useState<string | null>(null);
  const { updateAudioFiles } = useAudio();

  const deliveryRef = useRef<HTMLInputElement>(null);
  const receivingRef = useRef<HTMLInputElement>(null);
  const returnRef = useRef<HTMLInputElement>(null);
  const cellsRef = useRef<HTMLInputElement>(null);

  const handleFolderUpload = async (
    type: keyof AudioFiles,
    event: React.ChangeEvent<HTMLInputElement>
  ) => {
    const files = event.target.files;
    if (!files) return;

    setUploading(type);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã
    const audioFileArray = Array.from(files).filter(file => 
      file.type.startsWith('audio/') || 
      /\.(mp3|wav|ogg|m4a|aac|flac)$/i.test(file.name)
    );

    if (audioFileArray.length === 0) {
      alert('–í –ø–∞–ø–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∞—É–¥–∏–æ —Ñ–∞–π–ª–æ–≤! –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: MP3, WAV, OGG, M4A, AAC, FLAC');
      setUploading(null);
      return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const updatedFiles = {
      ...audioFiles,
      [type]: audioFileArray
    };
    
    setAudioFiles(updatedFiles);
    setUploading(null);
  };

  const clearSection = (type: keyof AudioFiles) => {
    const updatedFiles = {
      ...audioFiles,
      [type]: []
    };
    setAudioFiles(updatedFiles);
  };

  const handleSave = async () => {
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º File objects –≤ URL –¥–ª—è —Å–∏—Å—Ç–µ–º—ã
    const convertedFiles: {[key: string]: string} = {};
    const cellFiles: {[key: string]: string} = {};
    let totalConverted = 0;
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤
    for (const [type, files] of Object.entries(audioFiles)) {
      for (const file of files) {
        const baseFileName = file.name.replace(/\.[^/.]+$/, '');
        const audioUrl = URL.createObjectURL(file);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º —Ç–∏–ø–∞
        const prefixedFileName = `${type}-${baseFileName}`;
        convertedFiles[prefixedFileName] = audioUrl;
        
        // –¢–ê–ö–ñ–ï —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ë–ï–ó –ø—Ä–µ—Ñ–∏–∫—Å–∞ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        convertedFiles[baseFileName] = audioUrl;
        
        // üîí –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï –§–ê–ô–õ–û–í –Ø–ß–ï–ï–ö –ò –ü–†–û–¶–ï–°–°–û–í
        if (type === 'cells') {
          // –í–°–ï —Ñ–∞–π–ª—ã –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ "—è—á–µ–π–∫–∏" —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
          cellFiles[baseFileName] = audioUrl;
          cellFiles[prefixedFileName] = audioUrl;
          console.log(`üè† –Ø–ß–ï–ô–ö–ê –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ó–ê–©–ò–©–ï–ù–ê: ${baseFileName} (—Ç–∏–ø: ${type})`);
        }
        
        if (type === 'receiving' || type === 'delivery') {
          // –í–°–ï —Ñ–∞–π–ª—ã –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
          cellFiles[baseFileName] = audioUrl;
          cellFiles[prefixedFileName] = audioUrl;
          console.log(`üîÑ –ü–†–û–¶–ï–°–° –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ó–ê–©–ò–©–ï–ù: ${baseFileName} (—Ç–∏–ø: ${type})`);
        }
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        if (/^\d+$/.test(baseFileName) || baseFileName.includes('cell-') || baseFileName.includes('—è—á–µ–π–∫–∞') ||
            baseFileName.includes('–∫–æ—Ä–æ–±–∫–∞') || baseFileName.includes('—Ç–æ–≤–∞—Ä') || baseFileName.includes('–ø—Ä–∏–µ–º–∫–∞') ||
            baseFileName.includes('box-scanned') || baseFileName.includes('item-for-pvz') || baseFileName.includes('bulk-accepted')) {
          cellFiles[baseFileName] = audioUrl;
          cellFiles[prefixedFileName] = audioUrl;
          console.log(`üîë –ö–õ–Æ–ß–ï–í–û–ï –°–õ–û–í–û –ó–ê–©–ò–©–ï–ù–û: ${baseFileName}`);
        }
        
        totalConverted++;
      }
    }
    
    // üîí –ó–ê–©–ò–©–ï–ù–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï –ù–ê–°–¢–†–û–ï–ö –Ø–ß–ï–ï–ö –ò –ü–†–ò–ï–ú–ö–ò
    if (Object.keys(cellFiles).length > 0) {
      try {
        localStorage.setItem('wb-pvz-cell-audio-settings-permanent', JSON.stringify(cellFiles));
        localStorage.setItem('wb-pvz-cell-audio-lock', 'LOCKED');
        localStorage.setItem('wb-pvz-cell-audio-timestamp', new Date().toISOString());
        console.log(`üîí –ó–ê–©–ò–©–ï–ù–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï: ${Object.keys(cellFiles).length} —Ñ–∞–π–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞–≤—Å–µ–≥–¥–∞`);
        console.log('üîí –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:', Object.keys(cellFiles));
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
      }
    } else {
      console.log('‚ö†Ô∏è –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
    }

    // üîí –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª—ã —è—á–µ–µ–∫ –∏–∑ –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    try {
      const allCellFiles = {};
      Object.keys(convertedFiles).forEach(key => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ñ–∞–π–ª–æ–≤ —è—á–µ–µ–∫
        if (/^\d+$/.test(key) || key.includes('cell-') || key.includes('—è—á–µ–π–∫–∞') || 
            key.includes('receiving-') || key.includes('delivery-') || key.includes('cells-')) {
          allCellFiles[key] = convertedFiles[key];
          console.log(`üîí –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û –°–û–•–†–ê–ù–ï–ù: ${key}`);
        }
      });
      
      if (Object.keys(allCellFiles).length > 0) {
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
        const existingProtected = JSON.parse(localStorage.getItem('wb-pvz-cell-audio-settings-permanent') || '{}');
        const mergedFiles = { ...existingProtected, ...allCellFiles };
        
        localStorage.setItem('wb-pvz-cell-audio-settings-permanent', JSON.stringify(mergedFiles));
        localStorage.setItem('wb-pvz-cell-audio-lock', 'LOCKED');
        console.log(`üîí –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û –ó–ê–©–ò–©–ï–ù–û: ${Object.keys(allCellFiles).length} —Ñ–∞–π–ª–æ–≤ —è—á–µ–µ–∫`);
        console.log('üîí –í—Å–µ–≥–æ –≤ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:', Object.keys(mergedFiles));
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
    }
    
    if (totalConverted > 0) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–µ—Ä–µ–∑ useAudio (–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ base64)
      await updateAudioFiles(convertedFiles);
      console.log(`‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${totalConverted} –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ useAudio`);
    }
    
    onAudioFilesUpdate(audioFiles);
    onClose();
  };

  const getTotalFiles = () => {
    return audioFiles.delivery.length + audioFiles.receiving.length + 
           audioFiles.return.length + audioFiles.cells.length;
  };

  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        
        {/* Header */}
        <div className="p-6 border-b border-gray-200">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <Icon name="Settings" size={24} className="text-blue-600" />
              <h2 className="text-xl font-semibold">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∑–≤—É—á–∫–∏</h2>
            </div>
            <Button
              variant="ghost"
              size="sm"
              onClick={onClose}
              className="text-gray-500 hover:text-gray-700"
            >
              <Icon name="X" size={20} />
            </Button>
          </div>
          <p className="text-gray-600 mt-2">
            –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–∞–ø–∫–∏ —Å –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞–º–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–∑–≤—É—á–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
          </p>
        </div>

        {/* Content */}
        <div className="p-6 space-y-6">
          
          {/* –ü—Ä–æ—Ü–µ—Å—Å—ã (–í—ã–¥–∞—á–∞/–ü—Ä–∏–µ–º–∫–∞/–í–æ–∑–≤—Ä–∞—Ç) */}
          <div className="space-y-4">
            <h3 className="font-medium text-lg flex items-center gap-2">
              <Icon name="Play" size={20} className="text-green-600" />
              –û–∑–≤—É—á–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            </h3>

            {/* –í—ã–¥–∞—á–∞ */}
            <div className="border rounded-lg p-4 space-y-3">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-2">
                  <Icon name="Package" size={18} className="text-blue-600" />
                  <span className="font-medium">–í—ã–¥–∞—á–∞ —Ç–æ–≤–∞—Ä–æ–≤</span>
                  <Badge variant="secondary">{audioFiles.delivery.length} —Ñ–∞–π–ª–æ–≤</Badge>
                </div>
                {audioFiles.delivery.length > 0 && (
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => clearSection('delivery')}
                    className="text-red-500 hover:text-red-700"
                  >
                    <Icon name="Trash2" size={16} />
                  </Button>
                )}
              </div>
              
              <input
                ref={deliveryRef}
                type="file"
                multiple
                webkitdirectory="true"
                directory=""
                accept="audio/*"
                onChange={(e) => handleFolderUpload('delivery', e)}
                className="hidden"
              />
              
              <Button
                variant="outline"
                onClick={() => deliveryRef.current?.click()}
                disabled={uploading === 'delivery'}
                className="w-full"
              >
                {uploading === 'delivery' ? (
                  <>
                    <Icon name="Loader2" size={16} className="animate-spin mr-2" />
                    –ó–∞–≥—Ä—É–∑–∫–∞...
                  </>
                ) : (
                  <>
                    <Icon name="FolderOpen" size={16} className="mr-2" />
                    –í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è –≤—ã–¥–∞—á–∏
                  </>
                )}
              </Button>
            </div>

            {/* –ü—Ä–∏–µ–º–∫–∞ */}
            <div className="border rounded-lg p-4 space-y-3">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-2">
                  <Icon name="PackageCheck" size={18} className="text-green-600" />
                  <span className="font-medium">–ü—Ä–∏–µ–º–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤</span>
                  <Badge variant="secondary">{audioFiles.receiving.length} —Ñ–∞–π–ª–æ–≤</Badge>
                </div>
                {audioFiles.receiving.length > 0 && (
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => clearSection('receiving')}
                    className="text-red-500 hover:text-red-700"
                  >
                    <Icon name="Trash2" size={16} />
                  </Button>
                )}
              </div>
              
              <input
                ref={receivingRef}
                type="file"
                multiple
                webkitdirectory="true"
                directory=""
                accept="audio/*"
                onChange={(e) => handleFolderUpload('receiving', e)}
                className="hidden"
              />
              
              <Button
                variant="outline"
                onClick={() => receivingRef.current?.click()}
                disabled={uploading === 'receiving'}
                className="w-full"
              >
                {uploading === 'receiving' ? (
                  <>
                    <Icon name="Loader2" size={16} className="animate-spin mr-2" />
                    –ó–∞–≥—Ä—É–∑–∫–∞...
                  </>
                ) : (
                  <>
                    <Icon name="FolderOpen" size={16} className="mr-2" />
                    –í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–∏–µ–º–∫–∏
                  </>
                )}
              </Button>
              
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-3">
                <p className="text-sm text-blue-800 font-medium mb-2">üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è –ø—Ä–∏–µ–º–∫–∏:</p>
                <div className="text-xs text-blue-700 space-y-1">
                  <div><strong>–î–µ–π—Å—Ç–≤–∏—è:</strong> "–∫–æ—Ä–æ–±–∫–∞-–ø—Ä–∏–Ω—è—Ç–∞.mp3", "–æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ-–µ—â–µ-—Ä–∞–∑.mp3", "–ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ-–ø—Ä–∏–µ–º–∫—É.mp3"</div>
                  <div><strong>–°—Ç–∞—Ç—É—Å—ã:</strong> "—Ç–æ–≤–∞—Ä-–¥–ª—è-–ø–≤–∑.mp3", "–æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ-—Å–ª–µ–¥—É—é—â–∏–π-—Ç–æ–≤–∞—Ä.mp3", "–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π-–∑–∞–∫–∞–∑.mp3"</div>
                  <div><strong>–ü—Ä–æ–≤–µ—Ä–∫–∏:</strong> "–ø–æ–≤—Ç–æ—Ä-—Ç–æ–≤–∞—Ä-—É–∂–µ-–ø—Ä–∏–Ω—è—Ç.mp3", "–∫–æ—Ä–æ–±–∫–∞-–æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞.mp3"</div>
                  <div><strong>–Ø—á–µ–π–∫–∏:</strong> "1.mp3", "2.mp3", "3.mp3" ... "482.mp3" (–Ω–æ–º–µ—Ä–∞ —è—á–µ–µ–∫)</div>
                </div>
              </div>
            </div>

            {/* –í–æ–∑–≤—Ä–∞—Ç */}
            <div className="border rounded-lg p-4 space-y-3">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-2">
                  <Icon name="Undo2" size={18} className="text-orange-600" />
                  <span className="font-medium">–í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–æ–≤</span>
                  <Badge variant="secondary">{audioFiles.return.length} —Ñ–∞–π–ª–æ–≤</Badge>
                </div>
                {audioFiles.return.length > 0 && (
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => clearSection('return')}
                    className="text-red-500 hover:text-red-700"
                  >
                    <Icon name="Trash2" size={16} />
                  </Button>
                )}
              </div>
              
              <input
                ref={returnRef}
                type="file"
                multiple
                webkitdirectory="true"
                directory=""
                accept="audio/*"
                onChange={(e) => handleFolderUpload('return', e)}
                className="hidden"
              />
              
              <Button
                variant="outline"
                onClick={() => returnRef.current?.click()}
                disabled={uploading === 'return'}
                className="w-full"
              >
                {uploading === 'return' ? (
                  <>
                    <Icon name="Loader2" size={16} className="animate-spin mr-2" />
                    –ó–∞–≥—Ä—É–∑–∫–∞...
                  </>
                ) : (
                  <>
                    <Icon name="FolderOpen" size={16} className="mr-2" />
                    –í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
                  </>
                )}
              </Button>
            </div>
          </div>

          {/* –Ø—á–µ–π–∫–∏ */}
          <div className="space-y-4">
            <h3 className="font-medium text-lg flex items-center gap-2">
              <Icon name="Grid3X3" size={20} className="text-purple-600" />
              –û–∑–≤—É—á–∫–∞ —è—á–µ–µ–∫
            </h3>

            <div className="border rounded-lg p-4 space-y-3">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-2">
                  <Icon name="MapPin" size={18} className="text-purple-600" />
                  <span className="font-medium">–ù–æ–º–µ—Ä–∞ —è—á–µ–µ–∫</span>
                  <Badge variant="secondary">{audioFiles.cells.length} —Ñ–∞–π–ª–æ–≤</Badge>
                </div>
                {audioFiles.cells.length > 0 && (
                  <Button
                    variant="ghost"
                    size="sm"
                    onClick={() => clearSection('cells')}
                    className="text-red-500 hover:text-red-700"
                  >
                    <Icon name="Trash2" size={16} />
                  </Button>
                )}
              </div>
              
              <input
                ref={cellsRef}
                type="file"
                multiple
                webkitdirectory="true"
                directory=""
                accept="audio/*"
                onChange={(e) => handleFolderUpload('cells', e)}
                className="hidden"
              />
              
              <Button
                variant="outline"
                onClick={() => cellsRef.current?.click()}
                disabled={uploading === 'cells'}
                className="w-full"
              >
                {uploading === 'cells' ? (
                  <>
                    <Icon name="Loader2" size={16} className="animate-spin mr-2" />
                    –ó–∞–≥—Ä—É–∑–∫–∞...
                  </>
                ) : (
                  <>
                    <Icon name="FolderOpen" size={16} className="mr-2" />
                    –í—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É —Å –Ω–æ–º–µ—Ä–∞–º–∏ —è—á–µ–µ–∫
                  </>
                )}
              </Button>
            </div>

            <div className="bg-blue-50 p-4 rounded-lg">
              <div className="flex items-start gap-3">
                <Icon name="Info" size={20} className="text-blue-600 mt-0.5" />
                <div className="text-sm text-blue-800">
                  <p className="font-medium mb-1">–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–∑–≤—É—á–∫–∞ —è—á–µ–µ–∫:</p>
                  <ul className="space-y-1 text-blue-700">
                    <li>‚Ä¢ –ù–∞–∑–æ–≤–∏—Ç–µ —Ñ–∞–π–ª—ã –ø–æ –Ω–æ–º–µ—Ä—É —è—á–µ–π–∫–∏: <code>A1.mp3</code>, <code>B15.wav</code></li>
                    <li>‚Ä¢ –ü—Ä–∏ –ø–æ–∫–∞–∑–µ —Ç–æ–≤–∞—Ä–∞ –≤ —è—á–µ–π–∫–µ A1 –ø—Ä–æ–∏–≥—Ä–∞–µ—Ç—Å—è —Ñ–∞–π–ª A1.mp3</li>
                    <li>‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: MP3, WAV, OGG, M4A, AAC, FLAC</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Footer */}
        <div className="p-6 border-t border-gray-200 bg-gray-50">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-2 text-sm text-gray-600">
              <Icon name="FileAudio" size={16} />
              <span>–í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: <strong>{getTotalFiles()} —Ñ–∞–π–ª–æ–≤</strong></span>
            </div>
            <div className="flex gap-3">
              {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—â–∏—â–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ */}
              <Button 
                variant="outline" 
                onClick={() => {
                  const protected_files = localStorage.getItem('wb-pvz-cell-audio-settings-permanent');
                  const lock = localStorage.getItem('wb-pvz-cell-audio-lock');
                  console.log('üîç –ü–†–û–í–ï–†–ö–ê –ó–ê–©–ò–©–ï–ù–ù–û–ì–û –•–†–ê–ù–ò–õ–ò–©–ê:');
                  console.log('üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:', lock);
                  if (protected_files) {
                    const files = JSON.parse(protected_files);
                    console.log('üîí –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:', Object.keys(files));
                    console.log('üîí –í—Å–µ–≥–æ:', Object.keys(files).length, '—Ñ–∞–π–ª–æ–≤');
                    alert(`–ó–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${Object.keys(files).length}\n–°–ø–∏—Å–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏`);
                  } else {
                    console.log('‚ùå –ù–µ—Ç –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤');
                    alert('–ó–∞—â–∏—â–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                  }
                }}
                size="sm"
              >
                üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ
              </Button>
              
              <Button variant="outline" onClick={onClose}>
                –û—Ç–º–µ–Ω–∞
              </Button>
              <Button onClick={handleSave}>
                <Icon name="Save" size={16} className="mr-2" />
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              </Button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};