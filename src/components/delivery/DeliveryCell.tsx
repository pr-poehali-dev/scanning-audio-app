import Icon from '@/components/ui/icon';
import { Order } from '@/data/mockOrders';
import { hasCellAudio } from '@/utils/cellAudioPlayer';

interface DeliveryCellProps {
  order: Order;
  selectedCell: string;
  onCellClick: (cellNumber: string) => void;
}

export const DeliveryCell = ({ order, selectedCell, onCellClick }: DeliveryCellProps) => {
  const handleCellClick = async (cellNumber: string) => {
    console.log(`üéØ DeliveryCell: –ö–ª–∏–∫ –ø–æ —è—á–µ–π–∫–µ ${cellNumber}`);
    
    // –í—ã–∑—ã–≤–∞–µ–º –ø—Ä–æ–ø onCellClick, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ª–æ–≥–∏–∫—É –æ–∑–≤—É—á–∫–∏
    onCellClick(cellNumber);
  };

  return (
    <div className="bg-white rounded-lg border p-6">
      <h3 className="text-lg font-semibold text-gray-900 mb-4">–Ø—á–µ–π–∫–∞ –¥–ª—è –≤—ã–¥–∞—á–∏</h3>
      <div className="max-w-sm mx-auto">
        <div
          onClick={() => handleCellClick(order.cellNumber)}
          className={`relative cursor-pointer transition-all duration-200 ${
            selectedCell === order.cellNumber 
              ? 'ring-2 ring-purple-500 bg-purple-50' 
              : 'hover:bg-gray-50'
          }`}
        >
          <div className="bg-gray-100 rounded-lg p-8 text-center border-2 border-gray-200">
            <div className="text-sm text-gray-500 mb-2 flex items-center justify-center gap-2">
              –Ø—á–µ–π–∫–∞
              {hasCellAudio(order.cellNumber) && (
                <Icon name="Volume2" size={16} className="text-green-600" title="–û–∑–≤—É—á–µ–Ω–∞" />
              )}
            </div>
            <div className="text-4xl font-bold text-gray-900">{order.cellNumber}</div>
            <div className="text-sm text-gray-600 mt-3">
              –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–æ–≤–∞—Ä–∞–º –∫–ª–∏–µ–Ω—Ç–∞
            </div>
            <div className="text-xs text-gray-500 mt-1">
              –ù–∞ —è—á–µ–π–∫–µ: {order.items.length}
              {hasCellAudio(order.cellNumber) && (
                <span className="text-green-600 ml-2">‚Ä¢ –û–∑–≤—É—á–µ–Ω–∞</span>
              )}
            </div>
          </div>
        </div>
          
        {selectedCell === order.cellNumber && (
          <div className="absolute top-2 right-2">
            <div className="w-6 h-6 bg-purple-600 rounded-full flex items-center justify-center">
              <Icon name="Check" size={16} className="text-white" />
            </div>
          </div>
        )}
      </div>

      {/* –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê + –¢–ï–°–¢ –ó–ê–ì–†–£–ó–ö–ò */}
      <div className="mt-2 flex gap-1">
        <button
          onClick={async () => {
            const cellNum = order.cellNumber;
            let report = `üîç –°–£–ü–ï–†-–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –Ø–ß–ï–ô–ö–ò ${cellNum}:\n\n`;
            
            // 1. –ü–†–û–í–ï–†–Ø–ï–ú –í–°–ï –ö–õ–Æ–ß–ò LOCALSTORAGE
            const allKeys = Object.keys(localStorage).filter(k => k.includes('audio') || k.includes('wb-'));
            report += `üì¶ –ù–ê–ô–î–ï–ù–û ${allKeys.length} –∞—É–¥–∏–æ-–∫–ª—é—á–µ–π –≤ localStorage:\n`;
            
            let foundAnyFile = false;
            let testedUrls = [];
            
            for (const key of allKeys) {
              try {
                const data = localStorage.getItem(key);
                if (data && data.length > 100) {
                  const parsed = JSON.parse(data);
                  
                  if (typeof parsed === 'object') {
                    // –≠—Ç–æ –æ–±—ä–µ–∫—Ç —Å —Ñ–∞–π–ª–∞–º–∏
                    const fileKeys = Object.keys(parsed);
                    const cellFiles = fileKeys.filter(fk => 
                      fk.includes(cellNum) || 
                      fk === cellNum ||
                      fk === `cell-${cellNum}` ||
                      fk === `—è—á–µ–π–∫–∞-${cellNum}` ||
                      fk === `delivery-cell-${cellNum}`
                    );
                    
                    if (cellFiles.length > 0) {
                      report += `‚úÖ ${key}: –Ω–∞–π–¥–µ–Ω–æ ${cellFiles.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è —è—á–µ–π–∫–∏\n`;
                      
                      for (const fileKey of cellFiles) {
                        const audioUrl = parsed[fileKey];
                        if (audioUrl && typeof audioUrl === 'string' && audioUrl.length > 50) {
                          foundAnyFile = true;
                          const urlType = audioUrl.startsWith('data:') ? 'DATA-URL' : 
                                         audioUrl.startsWith('blob:') ? 'BLOB-URL' : 'OTHER';
                          
                          report += `  ‚Üí ${fileKey}: ${urlType} (${audioUrl.length} —Å–∏–º–≤–æ–ª–æ–≤)\n`;
                          
                          // –ü–†–û–ë–£–ï–ú –í–û–°–ü–†–û–ò–ó–í–ï–°–¢–ò –ù–ê–ü–†–Ø–ú–£–Æ
                          try {
                            const audio = new Audio();
                            audio.volume = 0.7;
                            audio.src = audioUrl;
                            
                            await audio.play();
                            report += `    üéµ –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï –£–°–ü–ï–®–ù–û!\n`;
                            testedUrls.push(`${key}[${fileKey}]: ‚úÖ –†–ê–ë–û–¢–ê–ï–¢`);
                            
                            setTimeout(() => audio.pause(), 1500);
                            break; // –ù–∞—à–ª–∏ —Ä–∞–±–æ—á–∏–π —Ñ–∞–π–ª, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ
                            
                          } catch (playError) {
                            report += `    ‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: ${playError.message}\n`;
                            testedUrls.push(`${key}[${fileKey}]: ‚ùå ${playError.message}`);
                          }
                        }
                      }
                    }
                  }
                }
              } catch (err) {
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–ª—é—á–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ JSON
              }
            }
            
            if (!foundAnyFile) {
              report += `\n‚ùå –ù–ò –û–î–ù–û–ì–û –§–ê–ô–õ–ê –î–õ–Ø –Ø–ß–ï–ô–ö–ò ${cellNum} –ù–ï –ù–ê–ô–î–ï–ù–û!\n`;
              report += `\nüîß –ù–£–ñ–ù–û –ó–ê–ì–†–£–ó–ò–¢–¨ –§–ê–ô–õ:\n`;
              report += `- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä—è–¥–æ–º —Å —ç—Ç–æ–π –∫–Ω–æ–ø–∫–æ–π\n`;
              report += `- –ò–ª–∏ —Å–∏–Ω—é—é –∫–Ω–æ–ø–∫—É –≤ —à–∞–ø–∫–µ\n`;
              report += `- –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è ${cellNum}.mp3 –∏–ª–∏ cell-${cellNum}.mp3\n`;
            } else {
              report += `\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–û–í:\n`;
              testedUrls.forEach(test => report += `${test}\n`);
            }
            
            alert(report);
          }}
          className="px-2 py-1 bg-red-500 text-white text-xs rounded"
        >
          üîç
        </button>
        
        <input
          type="file"
          accept="audio/*"
          onChange={async (e) => {
            const file = e.target.files?.[0];
            if (!file) return;
            
            const cellNum = order.cellNumber;
            console.log(`üéØ –ù–û–í–ê–Ø –ó–ê–ì–†–£–ó–ö–ê: ${file.name} ‚Üí —è—á–µ–π–∫–∞ ${cellNum}`);
            
            try {
              // –ü–†–û–°–¢–û–ï –ò –ù–ê–î–ï–ñ–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï
              const reader = new FileReader();
              reader.onload = async (event) => {
                const dataUrl = event.target?.result as string;
                if (!dataUrl) {
                  alert('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞');
                  return;
                }
                
                console.log(`üìÅ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω: ${dataUrl.length} —Å–∏–º–≤–æ–ª–æ–≤`);
                
                // –¢–ï–°–¢ –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–Ø
                try {
                  const testAudio = new Audio(dataUrl);
                  testAudio.volume = 0.3;
                  await testAudio.play();
                  console.log(`‚úÖ –§–∞–π–ª —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç—Å—è - –∑–≤—É–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è`);
                  
                  setTimeout(() => {
                    testAudio.pause();
                    testAudio.currentTime = 0;
                  }, 1000);
                  
                  // –°–û–•–†–ê–ù–ï–ù–ò–ï –í –ù–ï–°–ö–û–õ–¨–ö–û –°–ò–°–¢–ï–ú –û–î–ù–û–í–†–ï–ú–ï–ù–ù–û
                  
                  // 1. –í –ø—Ä–æ—Å—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
                  const simpleKey = `cell_audio_${cellNum}`;
                  localStorage.setItem(simpleKey, dataUrl);
                  console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –ø—Ä–æ—Å—Ç–æ–π –∫–ª—é—á: ${simpleKey}`);
                  
                  // 2. –í –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ wb-audio-files
                  try {
                    const existingData = localStorage.getItem('wb-audio-files');
                    const audioFiles = existingData ? JSON.parse(existingData) : {};
                    
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥ –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –∫–ª—é—á–µ–π
                    const keys = [
                      cellNum,
                      `cell-${cellNum}`,
                      `—è—á–µ–π–∫–∞-${cellNum}`,
                      `–Ø—á–µ–π–∫–∞ ${cellNum}`,
                      `delivery-cell-${cellNum}`,
                      `audio_${cellNum}`,
                    ];
                    
                    keys.forEach(key => {
                      audioFiles[key] = dataUrl;
                    });
                    
                    localStorage.setItem('wb-audio-files', JSON.stringify(audioFiles));
                    console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –≤ wb-audio-files –ø–æ–¥ ${keys.length} –∫–ª—é—á–∞–º–∏`);
                    
                  } catch (mainError) {
                    console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É:`, mainError);
                  }
                  
                  // 3. –ß–µ—Ä–µ–∑ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É (–µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç)
                  try {
                    const { saveCellAudioToMainSystem } = await import('@/utils/cellAudioIntegration');
                    await saveCellAudioToMainSystem(cellNum, file);
                    console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É`);
                  } catch (integrationError) {
                    console.warn(`‚ö†Ô∏è –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:`, integrationError);
                  }
                  
                  alert(`‚úÖ –§–ê–ô–õ –£–°–ü–ï–®–ù–û –ó–ê–ì–†–£–ñ–ï–ù!\n\n–Ø—á–µ–π–∫–∞: ${cellNum}\n–§–∞–π–ª: ${file.name}\n–†–∞–∑–º–µ—Ä: ${file.size} –±–∞–π—Ç\n\n‚úÖ –§–∞–π–ª –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–∏—Å—Ç–µ–º–∞—Ö\n\nüéµ –¢–µ–ø–µ—Ä—å –∫–ª–∏–∫–Ω–∏—Ç–µ –ø–æ —è—á–µ–π–∫–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!`);
                  
                } catch (playError) {
                  console.error(`‚ùå –§–∞–π–ª –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è:`, playError);
                  alert(`‚ùå –û–®–ò–ë–ö–ê –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–Ø!\n\n–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω, –Ω–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.\n\n–ü—Ä–æ–±–ª–µ–º–∞: ${playError.message}\n\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n- –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç\n- –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª\n- –ü—Ä–æ–±–ª–µ–º—ã —Å –±—Ä–∞—É–∑–µ—Ä–æ–º\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ MP3 –∏–ª–∏ WAV.`);
                }
              };
              
              reader.onerror = () => {
                alert('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª.');
              };
              
              reader.readAsDataURL(file);
              
            } catch (error) {
              console.error(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:`, error);
              alert(`‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê!\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª.\n\n–û—à–∏–±–∫–∞: ${error.message}`);
            }
          }}
          className="text-xs w-20"
        />
        
        <button
          onClick={async () => {
            // –ü–†–û–°–¢–ï–ô–®–ò–ô –¢–ï–°–¢ –ó–í–£–ö–ê
            console.log('üß™ –¢–ï–°–¢ –ü–†–û–°–¢–û–ì–û –ó–í–£–ö–ê...');
            
            try {
              // –¢–µ—Å—Ç 1: –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç-–∑–≤—É–∫
              const testAudio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBT2a3/THdiMFl2/W8dVgBgAcVeT2um0eCjGH5+y2ZAUOh8fH3AoOhyAAPFm0u6VAHyA2j8aQWn0MEGWp7O4JKlMK7Ia2+gAjp0h4gNfSRLcGTHexF6bHQjUV1zJKzAa/dVveFTdJKWKcVcRh9W9ZuQNTm8N/bqOu2GQn1cQQa8AckfG9zQfbEZrJUOlZM7DQWr4CuKJ7N5F0LTjYK8AcRaQFUJxLAhO2xmEcuWvqOcqLShO2y2HaKkI0dZJCKm3jBJ1zbpFk/1h7mbQ9FnGFZKKmqfGUBRKTjb04s6ZI4d9hLa2F62wEpfPf6dWQhK6jWOLSvqBNNZJeZjj7eSNGr8DZSkGvFb9wCH+JLCGfU8cgKKGPtaZnqCKHcCqPxQU0jXYGjK8Dg2BnAyJcaZK1bINvLIYfM5PFM8xCfGj5A1uKVcPDfgWKkXcDKpOdKlI/IYYa++5rBFhqcMIzq5QeLhZzKWJXDt0HuKPGcMEL8QV8WUO6EhFdC9P3ZWC/lMYE7xIlJQmPyItI5Y+qJc9ZxKfRGNJ0AySk/BQaAL9Z7zCCcVNwWdOqAMhQoLRSL9NTa6HLjPQQFaP2SQOPhhPYf4xfQ8oQmGZLCKAiI3mOVZsQNHMpYLHqHMFIjP1Hv40+LDg1+uJ2PqJV4A4u2Nau0rPD4LT9yOpSdOfHs3vUAOxL+s3jOILCq3UtqQUuB8QGvNAmJBuFr2vWzQNKsG5lRYkGzAwBqYcx/tLSBTMUmO7+IJ0b0mGh0vCrYKJ3HfADhmMukmkQtfKxEgQCjGMpUF7d1lhYUoEFuUPT7T7xJnXNQrRvp1dqxQNdTdEYLCJJ5xQZxJGd1fNzaKDFj8xqGfHaZLYUVzVeLXXZPMJ1D6pj4lIhHlMkKXDGGI7J8o6Q6JRQP0s8Lj4JSkCa0pOhJSF7Eqxg9+MFX3gKpN2M/rEi3j8H0VSNM9a8Y7CjCCEJXSBM2nDHZqQKsKxzNfuON5r1eCE2kZEZKdGKKaRUgKpjfOqtBvBJLO6FQr4K9YUGJIjHmgwXwTTjJn5Nq4EqL8+CGQRQ2AYfhBQZfk2QaJiJlJYKRSgkzFOlMJOCFPAzBP/1hfRmTe7CaXHfHBPzqOxGZcTFdUVk4L2Fg8TdNjAbJcJJ6kNJrCKB4vGw/NHSvVoO/MFi4BQj0JF8z10KaKnMfYz7a0+BcULJNJL9YCUhJZGUFTwCbhJGnzNbY1M5yCt7sWCPzQAMWGtCd4cNJK1R8+YXKyYGSHUvVoQB8BEJcjWQnTySTJE8YV+8EQV6vCZPJfKCBNE2xOBgr95kKpJJSgP6wPdFJoQCYnJFjRAQg+gVoMJHKGWaKEFNlA9U8Wr5JFZN6BJiw1RjmPRCkTcTjJSmRGQK7ECmZR/+fBKB2zL3pJkEcUJHkRGBJKQ6bGQJH3JCn3VUf3ICY1FmFFdNz2QBbN7n9JdCQEQ7Qr1HFX1FNjLKdJCaZKI7d2MJ8LwFJ9dZJKgB');
              testAudio.volume = 0.1;
              await testAudio.play();
              console.log('‚úÖ –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç-–∑–≤—É–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è');
              testAudio.pause();
            } catch (testError) {
              console.error('‚ùå –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç-–∑–≤—É–∫ –ù–ï –†–ê–ë–û–¢–ê–ï–¢:', testError);
              alert('‚ùå –ü–†–û–ë–õ–ï–ú–ê –° –ë–†–ê–£–ó–ï–†–û–ú!\n\n–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç-–∑–≤—É–∫ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.\n\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n- –ë—Ä–∞—É–∑–µ—Ä –±–ª–æ–∫–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ\n- –ù–µ—Ç –∑–≤—É–∫–æ–≤—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n- –ü—Ä–æ–±–ª–µ–º—ã —Å –∞—É–¥–∏–æ-–¥—Ä–∞–π–≤–µ—Ä–∞–º–∏\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n1. –í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ\n2. –ö–ª–∏–∫–Ω—É—Ç—å –≥–¥–µ-—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–Ω–∞—á–∞–ª–∞\n3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–≤—É–∫–∞');
              return;
            }
            
            const cellNum = order.cellNumber;
            console.log(`üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï —è—á–µ–π–∫–∏ ${cellNum}`);
            
            // –ò—â–µ–º –õ–Æ–ë–û–ô –∞—É–¥–∏–æ —Ñ–∞–π–ª –≤ localStorage –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–¥–æ–π—Ç–∏
            const allKeys = Object.keys(localStorage).filter(k => k.includes('audio') || k.includes('wb-'));
            
            for (const key of allKeys) {
              try {
                const data = localStorage.getItem(key);
                if (data && data.length > 100) {
                  const parsed = JSON.parse(data);
                  
                  if (typeof parsed === 'object') {
                    // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏ –≤ –æ–±—ä–µ–∫—Ç–µ
                    for (const [fileKey, audioUrl] of Object.entries(parsed)) {
                      if (typeof audioUrl === 'string' && audioUrl.length > 50) {
                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—à–∞ —è—á–µ–π–∫–∞
                        const isOurCell = fileKey.includes(cellNum) || 
                                         fileKey === cellNum ||
                                         fileKey === `cell-${cellNum}` ||
                                         fileKey === `—è—á–µ–π–∫–∞-${cellNum}`;
                        
                        if (isOurCell) {
                          console.log(`üéØ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: ${key}[${fileKey}]`);
                          
                          try {
                            const audio = new Audio();
                            audio.volume = 0.8;
                            audio.src = audioUrl;
                            
                            await audio.play();
                            console.log(`‚úÖ –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï –£–°–ü–ï–®–ù–û!`);
                            
                            setTimeout(() => audio.pause(), 2000);
                            return; // –£—Å–ø–µ—Ö!
                            
                          } catch (playError) {
                            console.warn(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ ${key}[${fileKey}]:`, playError.message);
                          }
                        }
                      }
                    }
                  }
                }
              } catch (err) {
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ—á–∏—Ç–∞–µ–º—ã–µ –∫–ª—é—á–∏
              }
            }
            
            alert(`‚ùå –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï –ù–ï –£–î–ê–õ–û–°–¨!\n\n–î–ª—è —è—á–µ–π–∫–∏ ${cellNum} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞.\n\n–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ –ø–æ–ª–µ —Ä—è–¥–æ–º.`);
          }}
          className="px-2 py-1 bg-green-600 text-white text-xs rounded"
          title="–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ - –∏—â–µ—Ç —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é –≤ localStorage"
        >
          üö®
        </button>
      </div>
      
      {/* –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ó–í–£–ö–ê */}
      <button
        onClick={async () => {
          console.log('üîä –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ó–í–£–ö–ê');
          try {
            const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBT2a3/THdiMF');
            audio.volume = 0.8;
            await audio.play();
            alert('‚úÖ –ó–í–£–ö –†–ê–ë–û–¢–ê–ï–¢!\n\n–ï—Å–ª–∏ –≤—ã —Å–ª—ã—à–∏—Ç–µ –∑–≤—É–∫–æ–≤–æ–π —Å–∏–≥–Ω–∞–ª, –∑–Ω–∞—á–∏—Ç –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ, –∞ –≤ —Å–∏—Å—Ç–µ–º–∞—Ö –æ–∑–≤—É—á–∫–∏ —è—á–µ–µ–∫.');
          } catch (error) {
            alert(`‚ùå –ó–í–£–ö –ù–ï –†–ê–ë–û–¢–ê–ï–¢!\n\n–û—à–∏–±–∫–∞: ${error.message}\n\n–ü—Ä–æ–±–ª–µ–º–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∑–≤—É–∫–∞.\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n1. –í–∫–ª—é—á–µ–Ω –ª–∏ –∑–≤—É–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ\n2. –†–∞–±–æ—Ç–∞—é—Ç –ª–∏ –∫–æ–ª–æ–Ω–∫–∏/–Ω–∞—É—à–Ω–∏–∫–∏\n3. –ù–∞–∂–º–∏—Ç–µ –≥–¥–µ-—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–≤—É–∫–∞`);
          }
        }}
        className="mt-2 w-full px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded hover:bg-blue-700"
      >
        üîä –¢–ï–°–¢ –ó–í–£–ö–ê –í –ë–†–ê–£–ó–ï–†–ï
      </button>
    </div>
  );
};