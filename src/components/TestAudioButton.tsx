import { useState } from 'react';
import Icon from '@/components/ui/icon';

const TestAudioButton = () => {
  const [testing, setTesting] = useState(false);

  const testAudio = async () => {
    setTesting(true);
    console.log('üß™ –¢–ï–°–¢–ò–†–£–ï–ú –û–ó–í–£–ß–ö–£...');

    try {
      // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º bulletproof —Å–∏—Å—Ç–µ–º—É
      const { playAudio, playCellAudio, getAudioStats } = await import('@/utils/bulletproofAudio');
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      const stats = getAudioStats();
      console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞—É–¥–∏–æ:', stats);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
      const activeVariant = localStorage.getItem('wb-active-voice-variant');
      console.log('üéµ –ê–∫—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:', activeVariant);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
      const variant1Data = localStorage.getItem('wb-voice-variant1-permanent');
      const variant2Data = localStorage.getItem('wb-voice-variant2-permanent');
      
      console.log('üì¶ –í–∞—Ä–∏–∞–Ω—Ç 1 –∑–∞–≥—Ä—É–∂–µ–Ω:', !!variant1Data, variant1Data ? '—Ä–∞–∑–º–µ—Ä:' + variant1Data.length : '');
      console.log('üì¶ –í–∞—Ä–∏–∞–Ω—Ç 2 –∑–∞–≥—Ä—É–∂–µ–Ω:', !!variant2Data, variant2Data ? '—Ä–∞–∑–º–µ—Ä:' + variant2Data.length : '');
      
      // –ü—Ä–æ–±—É–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ç–µ—Å—Ç–æ–≤—É—é —è—á–µ–π–∫—É
      console.log('üîä –ü—Ä–æ–±—É–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —è—á–µ–π–∫—É 1...');
      const success1 = await playCellAudio('1');
      console.log('üîä –†–µ–∑—É–ª—å—Ç–∞—Ç —è—á–µ–π–∫–∏ 1:', success1);
      
      await new Promise(resolve => setTimeout(resolve, 500));
      
      // –ü—Ä–æ–±—É–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —è—á–µ–π–∫—É 100
      console.log('üîä –ü—Ä–æ–±—É–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —è—á–µ–π–∫—É 100...');
      const success100 = await playCellAudio('100');
      console.log('üîä –†–µ–∑—É–ª—å—Ç–∞—Ç —è—á–µ–π–∫–∏ 100:', success100);
      
      await new Promise(resolve => setTimeout(resolve, 500));
      
      // –ü—Ä–æ–±—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –∑–≤—É–∫
      console.log('üîä –ü—Ä–æ–±—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –∑–≤—É–∫...');
      const successSystem = await playAudio('—Ç–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π');
      console.log('üîä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∑–≤—É–∫–∞:', successSystem);
      
      if (success1 || success100 || successSystem) {
        alert('‚úÖ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª! –û–∑–≤—É—á–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç.\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.');
      } else {
        alert('‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª. –û–∑–≤—É—á–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.\n\n–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏.');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      alert(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error}`);
    }
    
    setTesting(false);
  };

  return (
    <button 
      onClick={testAudio}
      disabled={testing}
      className="fixed bottom-4 right-4 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg shadow-lg flex items-center space-x-2 z-50"
    >
      {testing ? (
        <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin" />
      ) : (
        <Icon name="Volume2" size={16} />
      )}
      <span>{testing ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º...' : '–¢–µ—Å—Ç –æ–∑–≤—É—á–∫–∏'}</span>
    </button>
  );
};

export default TestAudioButton;