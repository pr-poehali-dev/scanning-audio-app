import { useState } from 'react';
import Icon from '@/components/ui/icon';

const TestAudioButton = () => {
  const [testing, setTesting] = useState(false);

  const testAudio = async () => {
    setTesting(true);
    console.log('üß™ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ô –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò...');

    try {
      // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É
      const { testDirectAudio, forceActivateAudio } = await import('@/utils/directAudioTest');
      
      const diagnostic = await testDirectAudio();
      console.log(diagnostic);
      
      // –ü—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–∞—Ü–∏—é
      console.log('üîÑ –ü–†–û–ë–£–ï–ú –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–£–Æ –ê–ö–¢–ò–í–ê–¶–ò–Æ...');
      const activated = await forceActivateAudio();
      
      if (activated) {
        // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ - —Ç–µ—Å—Ç–∏—Ä—É–µ–º bulletproof
        const { playCellAudio } = await import('@/utils/bulletproofAudio');
        
        console.log('üîä –¢–ï–°–¢–ò–†–£–ï–ú –ü–û–°–õ–ï –ê–ö–¢–ò–í–ê–¶–ò–ò...');
        const success = await playCellAudio('1');
        
        if (success) {
          alert('‚úÖ –û–ó–í–£–ß–ö–ê –†–ê–ë–û–¢–ê–ï–¢!\n\n–ü–æ—Å–ª–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—Å–µ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–æ.\n\n–°–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.');
        } else {
          alert('‚ùå –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞, –Ω–æ –æ–∑–≤—É—á–∫–∞ –≤—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.\n\n–î–µ—Ç–∞–ª–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ (F12):\n\n' + diagnostic.slice(0, 500) + '...');
        }
      } else {
        alert('‚ùå –û–ó–í–£–ß–ö–ê –ù–ï –†–ê–ë–û–¢–ê–ï–¢\n\n–î–µ—Ç–∞–ª–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ (F12):\n\n' + diagnostic.slice(0, 500) + '...');
      }
      
    } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
      alert(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error}`);
    }
    
    setTesting(false);
  };

  return (
    <button 
      onClick={testAudio}
      disabled={testing}
      className="fixed bottom-4 right-4 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg shadow-lg flex items-center space-x-2 z-50"
    >
      {testing ? (
        <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin" />
      ) : (
        <Icon name="Volume2" size={16} />
      )}
      <span>{testing ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º...' : '–¢–µ—Å—Ç –æ–∑–≤—É—á–∫–∏'}</span>
    </button>
  );
};

export default TestAudioButton;