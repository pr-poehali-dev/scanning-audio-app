import { useCallback } from 'react';

export const useAudioHelpers = (updateAudioFiles: (files: Record<string, string>) => void, customAudioFiles: Record<string, string>) => {
  
  const getTabName = useCallback((tabId: string) => {
    const names: { [key: string]: string } = {
      'delivery': '–í—ã–¥–∞—á–∞',
      'acceptance': '–ü—Ä–∏–µ–º–∫–∞', 
      'returns': '–í–æ–∑–≤—Ä–∞—Ç',
      'general': '–û–±—â–∏–µ'
    };
    return names[tabId] || tabId;
  }, []);

  const handleFolderUpload = useCallback(async (event: React.ChangeEvent<HTMLInputElement>, tabType: string) => {
    const files = event.target.files;
    console.log('–í—ã–±—Ä–∞–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è', tabType, ':', files?.length);
    
    if (!files) return;

    const audioFiles: { [key: string]: string } = { ...customAudioFiles };
    let newFilesCount = 0;
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ–∑–≤—É—á–∫–∏
    if (tabType === 'variant-variant1' || tabType === 'variant-variant2') {
      const variantName = tabType === 'variant-variant1' ? '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è' : '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è';
      console.log(`üé≠ –ó–ê–ì–†–£–ñ–ê–Æ –í–ê–†–ò–ê–ù–¢: ${variantName}`);
      
      const base64Files: { [key: string]: string } = {};
      let processedCount = 0;
      
      const processFile = (file: File) => {
        const reader = new FileReader();
        reader.onload = () => {
          const base64 = reader.result as string;
          const baseFileName = file.name.replace(/\.[^/.]+$/, '');
          const audioUrl = URL.createObjectURL(file);
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ base64 –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
          base64Files[baseFileName] = base64;
          
          // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π URL –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
          audioFiles[baseFileName] = audioUrl;
          
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ —è—á–µ–µ–∫
          if (/^\d+$/.test(baseFileName)) {
            audioFiles[`cell-${baseFileName}`] = audioUrl;
            audioFiles[`—è—á–µ–π–∫–∞-${baseFileName}`] = audioUrl;
            base64Files[`cell-${baseFileName}`] = base64;
            base64Files[`—è—á–µ–π–∫–∞-${baseFileName}`] = base64;
            console.log(`üè† –Ø–ß–ï–ô–ö–ê ${baseFileName}: –≤—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã`);
          }
          
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–≤—É–∫–æ–≤
          if (baseFileName.toLowerCase().includes('—Ç–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π') || 
              baseFileName.toLowerCase().includes('—Å–∫–∏–¥–∫')) {
            audioFiles['discount'] = audioUrl;
            audioFiles['–¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –í–ë –∫–æ—à–µ–ª–µ–∫'] = audioUrl;
            base64Files['discount'] = base64;
            base64Files['–¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –í–ë –∫–æ—à–µ–ª–µ–∫'] = base64;
          }
          
          if (baseFileName.toLowerCase().includes('–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä') || 
              baseFileName.toLowerCase().includes('–∫–∞–º–µ—Ä')) {
            audioFiles['check-product-camera'] = audioUrl;
            audioFiles['–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ–¥ –∫–∞–º–µ—Ä–æ–π'] = audioUrl;
            base64Files['check-product-camera'] = base64;
            base64Files['–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ–¥ –∫–∞–º–µ—Ä–æ–π'] = base64;
          }
          
          if (baseFileName.toLowerCase().includes('–æ—Ü–µ–Ω–∏—Ç–µ') || 
              baseFileName.toLowerCase().includes('–ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏')) {
            audioFiles['rate-pvz'] = audioUrl;
            audioFiles['–û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏'] = audioUrl;
            audioFiles['–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏'] = audioUrl;
            base64Files['rate-pvz'] = base64;
            base64Files['–û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏'] = base64;
            base64Files['–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏'] = base64;
          }
          
          if (baseFileName.toLowerCase().includes('–æ–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏') || 
              baseFileName.toLowerCase().includes('–Ω–∞–ª–æ–∂–µ–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂')) {
            audioFiles['cash-on-delivery'] = audioUrl;
            audioFiles['–æ–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏'] = audioUrl;
            base64Files['cash-on-delivery'] = base64;
            base64Files['–æ–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏'] = base64;
          }
          
          if (baseFileName.toLowerCase().includes('–ø–∏–∫') && baseFileName.toLowerCase().includes('—Ü–∏—Ñ—Ä–∞')) {
            audioFiles['pick-digit'] = audioUrl;
            audioFiles['–ü–∏–∫ —Ü–∏—Ñ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤'] = audioUrl;
            base64Files['pick-digit'] = base64;
            base64Files['–ü–∏–∫ —Ü–∏—Ñ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤'] = base64;
          }
          
          if (baseFileName.toLowerCase().includes('—Å–ø–∞—Å–∏–±–æ') && baseFileName.toLowerCase().includes('–∑–∞–∫–∞–∑')) {
            audioFiles['thanks'] = audioUrl;
            audioFiles['–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ –æ—Ü–µ–Ω–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏'] = audioUrl;
            base64Files['thanks'] = base64;
            base64Files['–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑ –æ—Ü–µ–Ω–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏'] = base64;
          }
          
          processedCount++;
          console.log(`‚úÖ ${variantName} - –§–ê–ô–õ: ${baseFileName} (${processedCount}/${files.length})`);
          
          // –ö–æ–≥–¥–∞ –≤—Å–µ —Ñ–∞–π–ª—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
          if (processedCount === files.length) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
            try {
              const storageKey = `wb-pvz-${tabType}-audio-base64`;
              localStorage.setItem(storageKey, JSON.stringify(base64Files));
              console.log(`üíæ –°–û–•–†–ê–ù–ï–ù ${variantName}: ${Object.keys(base64Files).length} —Ñ–∞–π–ª–æ–≤ –≤ localStorage`);
              
              // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
              const fileNames = Object.keys(base64Files);
              localStorage.setItem(`wb-pvz-${tabType}-files`, JSON.stringify(fileNames));
            } catch (e) {
              console.warn('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ–∑–≤—É—á–∫–∏:', e);
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
            updateAudioFiles(audioFiles);
            
            alert(`${variantName} –æ–∑–≤—É—á–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!\n\n‚úÖ –§–∞–π–ª–æ–≤: ${Object.keys(base64Files).length}\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ`);
          }
        };
        reader.readAsDataURL(file);
      };
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        if (file.type.startsWith('audio/')) {
          processFile(file);
          newFilesCount++;
        }
      }
      
      if (event.target) {
        event.target.value = '';
      }
      return;
    }
    
    for (let i = 0; i < files.length; i++) {
      const file = files[i];
      console.log('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª:', file.name, '–¢–∏–ø:', file.type);
      
      if (file.type.startsWith('audio/')) {
        const baseFileName = file.name.replace(/\.[^/.]+$/, '');
        const audioUrl = URL.createObjectURL(file);
        
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ–∑–≤—É—á–∫–∏
        if (tabType === 'variant-variant1' || tabType === 'variant-variant2') {
          console.log(`üéØ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ–∑–≤—É—á–∫–∏: ${baseFileName}`);
          
          // –î–ª—è —è—á–µ–µ–∫ (—á–∏—Å–ª–æ) - —Å–æ–∑–¥–∞–µ–º –≤—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã
          if (/^\d+$/.test(baseFileName)) {
            audioFiles[baseFileName] = audioUrl; // 44
            audioFiles[`cell-${baseFileName}`] = audioUrl; // cell-44
            audioFiles[`—è—á–µ–π–∫–∞-${baseFileName}`] = audioUrl; // —è—á–µ–π–∫–∞-44
            console.log(`üè† –Ø–ß–ï–ô–ö–ê ${baseFileName}: —Å–æ–∑–¥–∞–Ω—ã –≤—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã`);
          }
          // –î–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–≤—É–∫–æ–≤ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –µ—Å—Ç—å –∏ —Å–æ–∑–¥–∞–µ–º –¥—É–±–ª–∏
          else {
            audioFiles[baseFileName] = audioUrl;
            
            // –ú–∞–ø–ø–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–≤—É–∫–æ–≤
            if (baseFileName.toLowerCase().includes('—Ç–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π') || 
                baseFileName.toLowerCase().includes('—Å–∫–∏–¥–∫')) {
              audioFiles['discount'] = audioUrl;
              audioFiles['–¢–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –í–ë –∫–æ—à–µ–ª–µ–∫'] = audioUrl;
            }
            
            if (baseFileName.toLowerCase().includes('–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä') || 
                baseFileName.toLowerCase().includes('–∫–∞–º–µ—Ä')) {
              audioFiles['check-product-camera'] = audioUrl;
              audioFiles['–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä –ø–æ–¥ –∫–∞–º–µ—Ä–æ–π'] = audioUrl;
            }
            
            if (baseFileName.toLowerCase().includes('–æ—Ü–µ–Ω–∏—Ç–µ') || 
                baseFileName.toLowerCase().includes('–ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏')) {
              audioFiles['rate-pvz'] = audioUrl;
              audioFiles['–û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏'] = audioUrl;
              audioFiles['–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏'] = audioUrl;
            }
            
            if (baseFileName.toLowerCase().includes('–æ–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏') || 
                baseFileName.toLowerCase().includes('–Ω–∞–ª–æ–∂–µ–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂')) {
              audioFiles['cash-on-delivery'] = audioUrl;
              audioFiles['–æ–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏'] = audioUrl;
            }
            
            console.log(`üéµ –°–ò–°–¢–ï–ú–ù–´–ô –ó–í–£–ö: ${baseFileName}`);
          }
        } else {
          // –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö –≤–∫–ª–∞–¥–æ–∫
          const prefixedFileName = `${tabType}-${baseFileName}`;
          audioFiles[prefixedFileName] = audioUrl;
          audioFiles[baseFileName] = audioUrl;
        }
        
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∞—É–¥–∏–æ—Ñ–∞–π–ª:`, {
          withPrefix: prefixedFileName,
          global: baseFileName,
          url: audioUrl
        });
        
        newFilesCount++;
      }
    }

    if (newFilesCount > 0) {
      updateAudioFiles(audioFiles);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã –≤ localStorage –¥–ª—è –≤—Å–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
      try {
        const audioFilesToStore = { ...audioFiles };
        // –£–¥–∞–ª—è–µ–º URL –æ–±—ä–µ–∫—Ç—ã –∏–∑ localStorage (–æ–Ω–∏ –Ω–µ —Å–µ—Ä–∏–∞–ª–∏–∑—É—é—Ç—Å—è)
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ
        const fileNames = Object.keys(audioFiles).filter(key => !key.includes('blob:'));
        localStorage.setItem('wb-pvz-uploaded-audio-files', JSON.stringify(fileNames));
        console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${fileNames.length} –Ω–∞–∑–≤–∞–Ω–∏–π –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ –≤ localStorage`);
      } catch (e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤ –≤ localStorage:', e);
      }
      
      alert(`–î–ª—è –≤–∫–ª–∞–¥–∫–∏ "${getTabName(tabType)}" –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${newFilesCount} –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤.\n\n‚úÖ –§–∞–π–ª—ã —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –≤—Å–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã!`);
    } else {
      alert('–ê—É–¥–∏–æ—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .mp3, .wav, .ogg –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ –∞—É–¥–∏–æ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏');
    }

    if (event.target) {
      event.target.value = '';
    }
  }, [updateAudioFiles, customAudioFiles, getTabName]);

  const getPhrasesByTab = useCallback((tabId: string) => {
    const phrases: { [key: string]: string[] } = {
      'delivery': ['–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –û—Ü–µ–Ω–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏!', '–í–µ—Ä–Ω–∏—Ç–µ –Ω–∞ —è—á–µ–π–∫—É'],
      'acceptance': ['–ü—Ä–∏–Ω—è—Ç–æ –≤ –ü–í–ó', '–û—à–∏–±–∫–∞ –ø—Ä–∏–µ–º–∫–∏', '–Ø—á–µ–π–∫–∞ 1', '–Ø—á–µ–π–∫–∞ 2', '–Ø—á–µ–π–∫–∞ 3'],
      'returns': ['–í–æ–∑–≤—Ä–∞—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω', '–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞'],
      'general': ['–û–±—â–∏–π —Å–∏–≥–Ω–∞–ª', '–û—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã']
    };
    return phrases[tabId] || [];
  }, []);

  const getDescriptionsByTab = useCallback((tabId: string) => {
    const descriptions: { [key: string]: { text: string; enabled: boolean }[] } = {
      'delivery': [
        { text: '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—ã–¥–∞—á–∏ –∑–∞–∫–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç—É', enabled: true },
        { text: '–°–Ω—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–∞ —Å –ø—Ä–∏–º–µ—Ä–∫–∏', enabled: false }
      ],
      'acceptance': [
        { text: '–£—Å–ø–µ—à–Ω–æ–µ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ç–æ–≤–∞—Ä–∞', enabled: true },
        { text: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–µ–º–∫–µ', enabled: true },
        { text: '–û–∑–≤—É—á–∫–∞ –Ω–æ–º–µ—Ä–∞ —è—á–µ–π–∫–∏ (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è)', enabled: true },
        { text: '–û–∑–≤—É—á–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —è—á–µ–π–∫–∏ (—Ä–µ–∑–µ—Ä–≤)', enabled: true },
        { text: '–û–∑–≤—É—á–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —è—á–µ–π–∫–∏ (—Ä–µ–∑–µ—Ä–≤)', enabled: true }
      ],
      'returns': [
        { text: '–£—Å–ø–µ—à–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞', enabled: true },
        { text: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ', enabled: false }
      ],
      'general': [
        { text: '–û–±—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', enabled: true },
        { text: '–°–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏', enabled: true }
      ]
    };
    return descriptions[tabId] || [];
  }, []);

  const togglePhraseEnabled = useCallback((tabId: string, phraseIndex: number, audioSettings: any, updateAudioSetting: (key: string, value: any) => void) => {
    const currentEnabled = audioSettings.enabled[`${tabId}-${phraseIndex}`] || false;
    const newEnabled = {
      ...audioSettings.enabled,
      [`${tabId}-${phraseIndex}`]: !currentEnabled
    };
    updateAudioSetting('enabled', newEnabled);
  }, []);

  return {
    getTabName,
    handleFolderUpload,
    getPhrasesByTab,
    getDescriptionsByTab,
    togglePhraseEnabled,
  };
};