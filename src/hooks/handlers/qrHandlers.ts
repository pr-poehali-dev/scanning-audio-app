import { useCallback } from 'react';
import { findOrderByPhone } from '@/data/mockOrders';

interface QRHandlersProps {
  activeTab: string;
  deliveryStep: string;
  playAudio?: (phraseKey: string, cellNumber?: number, itemCount?: number) => void;
  setIsScanning: (value: boolean) => void;
  setShowQRScanner: (value: boolean) => void;
  setCurrentOrder: (order: any) => void;
  setDeliveryStep: (step: any) => void;
  setScannedData: (data: string) => void;
  setIsProductScanned: (value: boolean) => void;
}

export const createQRHandlers = (props: QRHandlersProps) => {
  const {
    activeTab, deliveryStep, playAudio,
    setIsScanning, setShowQRScanner, setCurrentOrder, setDeliveryStep,
    setScannedData, setIsProductScanned
  } = props;

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ QR —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleQRScan = useCallback(async () => {
    if (activeTab === 'delivery') {
      // –§–∏–∫—Ç–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ –≤—ã–¥–∞—á–∏
      setIsScanning(true);
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      setTimeout(async () => {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
        const itemCount = Math.floor(Math.random() * 8) + 1;
        const randomCellNumber = Math.floor(Math.random() * 482) + 1;
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤
        const productNames = [
          'Nike / –ö—Ä–æ—Å—Å–æ–≤–∫–∏ –º—É–∂—Å–∫–∏–µ Air Max', 'Adidas / –§—É—Ç–±–æ–ª–∫–∞ –∂–µ–Ω—Å–∫–∞—è Originals',
          'Zara / –î–∂–∏–Ω—Å—ã –∂–µ–Ω—Å–∫–∏–µ slim fit', 'H&M / –ü–ª–∞—Ç—å–µ –≤–µ—á–µ—Ä–Ω–µ–µ —á—ë—Ä–Ω–æ–µ',
          'Uniqlo / –†—É–±–∞—à–∫–∞ –º—É–∂—Å–∫–∞—è –±–µ–ª–∞—è', 'Levi\'s / –ö—É—Ä—Ç–∫–∞ –¥–∂–∏–Ω—Å–æ–≤–∞—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è',
          'Calvin Klein / –¢—Ä—É—Å—ã –º—É–∂—Å–∫–∏–µ –Ω–∞–±–æ—Ä 3—à—Ç', 'Tommy Hilfiger / –ü–æ–ª–æ –º—É–∂—Å–∫–æ–µ —Å–∏–Ω–µ–µ',
          'Apple / –ß–µ—Ö–æ–ª –¥–ª—è iPhone 14 Pro', 'Samsung / –ù–∞—É—à–Ω–∏–∫–∏ Galaxy Buds Pro',
          'Xiaomi / Powerbank 20000mAh', 'Logitech / –ú—ã—à—å –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è MX Master',
          '–¢–ï–õ–û–î–í–ò–ñ–ï–ù–ò–Ø / –•—É–¥–∏ —É–Ω–∏—Å–µ–∫—Å —á–µ—Ä–Ω–æ–µ', '–¢–ï–õ–û–î–í–ò–ñ–ï–ù–ò–Ø / –°–≤–∏—Ç—à–æ—Ç –∂–µ–Ω—Å–∫–∏–π —Ä–æ–∑–æ–≤—ã–π',
          '–¢–ï–õ–û–î–í–ò–ñ–ï–ù–ò–Ø / –õ–æ–Ω–≥—Å–ª–∏–≤ –º—É–∂—Å–∫–æ–π —Å–µ—Ä—ã–π', 'Puma / –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —à—Ç–∞–Ω—ã –º—É–∂—Å–∫–∏–µ',
          'Reebok / –ö—Ä–æ—Å—Å–æ–≤–∫–∏ –∂–µ–Ω—Å–∫–∏–µ Classic', 'New Balance / –ö—Ä–æ—Å—Å–æ–≤–∫–∏ —É–Ω–∏—Å–µ–∫—Å 574',
          'Converse / –ö–µ–¥—ã –≤—ã—Å–æ–∫–∏–µ Chuck Taylor', 'Vans / –ö–µ–¥—ã Old Skool —á–µ—Ä–Ω—ã–µ',
          'The North Face / –ö—É—Ä—Ç–∫–∞ –∑–∏–º–Ω—è—è –ø—É—Ö–æ–≤–∏–∫', 'Columbia / –í–µ—Ç—Ä–æ–≤–∫–∞ –º—É–∂—Å–∫–∞—è –≤–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º–∞—è',
          'Patagonia / –§–ª–∏—Å–∫–∞ –∂–µ–Ω—Å–∫–∞—è —Å–∏–Ω—è—è', 'Mango / –ë–ª—É–∑–∫–∞ –∂–µ–Ω—Å–∫–∞—è —à—ë–ª–∫–æ–≤–∞—è',
          'Massimo Dutti / –ë—Ä—é–∫–∏ –º—É–∂—Å–∫–∏–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ', 'COS / –ü–∞–ª—å—Ç–æ –∂–µ–Ω—Å–∫–æ–µ —à–µ—Ä—Å—Ç—è–Ω–æ–µ',
          'ASOS / –°–≤–∏—Ç–µ—Ä –æ–≤–µ—Ä—Å–∞–π–∑ —É–Ω–∏—Å–µ–∫—Å', 'Bershka / –Æ–±–∫–∞ –∂–µ–Ω—Å–∫–∞—è –º–∏–Ω–∏ –¥–∂–∏–Ω—Å–æ–≤–∞—è',
          'Pull&Bear / –•—É–¥–∏ —É–Ω–∏—Å–µ–∫—Å —Å –ø—Ä–∏–Ω—Ç–æ–º', 'Stradivarius / –¢–æ–ø –∂–µ–Ω—Å–∫–∏–π –∫—Ä–æ–ø',
          'Reserved / –ö—É—Ä—Ç–∫–∞ –±–æ–º–±–µ—Ä –º—É–∂—Å–∫–∞—è', 'Sinsay / –ü–ª–∞—Ç—å–µ –∂–µ–Ω—Å–∫–æ–µ –ª–µ—Ç–Ω–µ–µ',
          'Cropp / –î–∂–æ–≥–≥–µ—Ä—ã –º—É–∂—Å–∫–∏–µ –∫–∞—Ä–≥–æ', 'House / –†—É–±–∞—à–∫–∞ –∂–µ–Ω—Å–∫–∞—è –æ–≤–µ—Ä—Å–∞–π–∑',
          'Mohito / –ñ–∞–∫–µ—Ç –∂–µ–Ω—Å–∫–∏–π —Ç–≤–∏–¥–æ–≤—ã–π'
        ];
        
        const items = Array.from({ length: itemCount }, (_, index) => {
          const originalPrice = Math.floor(Math.random() * 8000) + 500;
          const discountPercent = Math.floor(Math.random() * 70) + 10;
          const currentPrice = Math.floor(originalPrice * (100 - discountPercent) / 100);
          const productName = productNames[Math.floor(Math.random() * productNames.length)];
          
          return {
            id: `16466782${Math.floor(Math.random() * 9000) + 1000}${index}`,
            name: productName,
            barcode: `${Math.floor(Math.random() * 900000000000) + 100000000000}`,
            color: ['–ß–µ—Ä–Ω—ã–π', '–ë–µ–ª—ã–π', '–°–µ—Ä—ã–π', '–°–∏–Ω–∏–π', '–ö—Ä–∞—Å–Ω—ã–π', '–ó–µ–ª—ë–Ω—ã–π', '–ñ—ë–ª—Ç—ã–π', '–§–∏–æ–ª–µ—Ç–æ–≤—ã–π', '–†–æ–∑–æ–≤—ã–π', '–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π'][Math.floor(Math.random() * 10)],
            size: ['XS', 'S', 'M', 'L', 'XL', '42', '43', '44', '46', '48', '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π'][Math.floor(Math.random() * 11)],
            image: 'https://cdn.poehali.dev/files/b858b4bf-933e-42d2-85ef-ac50de2c51dd.png',
            price: currentPrice,
            brand: productName.split('/')[0].trim()
          };
        });
        
        const generatedOrder = {
          id: `order-${Date.now()}`,
          customerName: '–ö–ª–∏–µ–Ω—Ç',
          phone: `+7 (***) ***-${Math.floor(Math.random() * 9000) + 1000}`,
          status: 'ready_for_pickup' as const,
          cellNumber: randomCellNumber.toString(),
          items,
          createdAt: new Date(),
          updatedAt: new Date(),
          totalAmount: items.reduce((sum, item) => sum + item.price, 0),
          isActive: true
        };
        
        setCurrentOrder(generatedOrder);
        setDeliveryStep('client-scanned');
        setScannedData(`qr-${generatedOrder.id}-${generatedOrder.phone}`);
        
        console.log('‚úÖ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', generatedOrder.customerName, '–Ø—á–µ–π–∫–∞:', generatedOrder.cellNumber, '–¢–æ–≤–∞—Ä–æ–≤:', itemCount);
        
        // –û–∑–≤—É—á–∫–∞: –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏, —Ç–æ–≤–∞—Ä—ã, –æ–ø–ª–∞—Ç–∞
        if (playAudio) {
          playAudio('delivery-cell-info', randomCellNumber, itemCount);
        }
        
        // –ù–ï–ú–ï–î–õ–ï–ù–ù–û –û–ë–ù–û–í–õ–Ø–ï–ú –ò–ù–¢–ï–†–§–ï–ô–°
        setIsScanning(false);
        
      }, 300); // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
    } else if (activeTab === 'acceptance') {
      // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–∏–µ–º–∫–∏
      console.log('üì¶ –ü–†–ò–ï–ú–ö–ê: –§–∏–∫—Ç–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞');
      setIsScanning(true);
      
      setTimeout(async () => {
        console.log('‚úÖ –ü–†–ò–ï–ú–ö–ê: –¢–æ–≤–∞—Ä –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω');
        setIsScanning(false);
      }, 2000);
      
    } else if (activeTab === 'returns') {
      // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
      console.log('‚Ü©Ô∏è –í–û–ó–í–†–ê–¢: –§–∏–∫—Ç–∏–≤–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞');
      setIsScanning(true);
      
      setTimeout(async () => {
        console.log('‚úÖ –í–û–ó–í–†–ê–¢: –¢–æ–≤–∞—Ä –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞');
        setIsScanning(false);
      }, 2000);
      
    } else {
      // –î–ª—è –¥—Ä—É–≥–∏—Ö –≤–∫–ª–∞–¥–æ–∫ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–π —Å–∫–∞–Ω–µ—Ä
      setShowQRScanner(true);
    }
  }, [activeTab, setIsScanning, setShowQRScanner, setCurrentOrder, setDeliveryStep, setScannedData]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ QR —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const handleQRScanResult = useCallback(async (data: string) => {
    console.log('üì± QR –∫–æ–¥ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω:', data);
    setScannedData(data);
    setIsScanning(true);
    
    if (activeTab === 'delivery') {
      if (deliveryStep === 'initial') {
        // –ü–µ—Ä–≤–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ - QR –∫–ª–∏–µ–Ω—Ç–∞/–∫—É—Ä—å–µ—Ä–∞
        console.log('üîç –ü–æ–∏—Å–∫ –∑–∞–∫–∞–∑–∞ –ø–æ –¥–∞–Ω–Ω—ã–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...');
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ QR –∫–æ–¥–∞
        let phoneDigits = '';
        
        // –ò—â–µ–º 4 —Ü–∏—Ñ—Ä—ã –ø–æ–¥—Ä—è–¥ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã —Ç–µ–ª–µ—Ñ–æ–Ω–∞)
        const phoneMatch = data.match(/(\d{4})$/);
        if (phoneMatch) {
          phoneDigits = phoneMatch[1];
        } else {
          // –ò—â–µ–º –ª—é–±—ã–µ 4 —Ü–∏—Ñ—Ä—ã –≤ —Å—Ç—Ä–æ–∫–µ
          const allDigits = data.replace(/\D/g, '');
          if (allDigits.length >= 4) {
            phoneDigits = allDigits.slice(-4);
          }
        }
        
        console.log('üìû –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã —Ç–µ–ª–µ—Ñ–æ–Ω–∞:', phoneDigits);
        
        // –ò—â–µ–º –∑–∞–∫–∞–∑
        const order = findOrderByPhone(phoneDigits);
        
        if (order) {
          console.log('‚úÖ –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω:', order);
          setCurrentOrder(order);
          setDeliveryStep('client-scanned');
          
          console.log(`üè† –Ø—á–µ–π–∫–∞: ${order.cellNumber}`);
          
          // –ù–ï–ú–ï–î–õ–ï–ù–ù–û –û–ë–ù–û–í–õ–Ø–ï–ú –ò–ù–¢–ï–†–§–ï–ô–°
          setIsScanning(false);
          
        } else {
          console.log('‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–±—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞...');
          
          // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã
          const testOrder = findOrderByPhone('7589'); // –ï–ª–µ–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞
          if (testOrder) {
            setCurrentOrder(testOrder);
            setDeliveryStep('client-scanned');
          }
          
          // –ù–ï–ú–ï–î–õ–ï–ù–ù–û –û–ë–ù–û–í–õ–Ø–ï–ú –ò–ù–¢–ï–†–§–ï–ô–°
          setIsScanning(false);
        }
        
      } else if (deliveryStep === 'client-scanned') {
        // –í—Ç–æ—Ä–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ - —Ç–æ–≤–∞—Ä —Å–æ —Å–∫–ª–∞–¥–∞
        console.log('üì¶ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
        setDeliveryStep('product-scanned');
        setIsProductScanned(true);
        
        // –û–∑–≤—É—á–∫–∞: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–≤–∞—Ä
        if (playAudio) {
          playAudio('delivery-check-product');
        }
        
        // –ù–ï–ú–ï–î–õ–ï–ù–ù–û –û–ë–ù–û–í–õ–Ø–ï–ú –ò–ù–¢–ï–†–§–ï–ô–°
        setIsScanning(false);
      }
    } else if (activeTab === 'receiving') {
      // –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø—Ä–∏–µ–º–∫–∏
      console.log('üì¶ –ü–†–ò–ï–ú–ö–ê: –¢–æ–≤–∞—Ä –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω');
      setIsScanning(false);
      
    } else if (activeTab === 'returns') {
      // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–æ–≤
      console.log('‚Ü©Ô∏è –í–û–ó–í–†–ê–¢: –¢–æ–≤–∞—Ä –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω');
      setIsScanning(false);
      
    } else {
      console.log('üì± QR —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      setIsScanning(false);
    }
  }, [activeTab, deliveryStep, setScannedData, setIsScanning, setCurrentOrder, setDeliveryStep, setIsProductScanned]);

  return {
    handleQRScan,
    handleQRScanResult
  };
};