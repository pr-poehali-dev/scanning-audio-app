export const STORAGE_KEY = 'wb-audio-files';

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
export const CEMENT_SOURCES = [
  'wb-pvz-cell-audio-settings-permanent',
  'wb-pvz-cell-audio-backup', 
  'wb-pvz-cell-audio-cement',
  'wb-pvz-cell-audio-settings-STEEL-PROTECTION',
  'wb-pvz-EMERGENCY-audio-backup',
  'wb-pvz-cell-audio-IMMEDIATE', // –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
  'wb-NEVER-LOSE-CELLS-BACKUP' // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑–µ—Ä–≤
];

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ localStorage —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ–º
export const saveAudioFiles = (files: {[key: string]: string}): void => {
  try {
    const jsonData = JSON.stringify(files);
    const sizeInMB = (jsonData.length / (1024 * 1024)).toFixed(2);
    
    console.log(`üíæ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ${Object.keys(files).length} —Ñ–∞–π–ª–æ–≤ (${sizeInMB} –ú–ë)...`);
    
    // –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–ª—é—á–∏ (–æ–Ω–∏ –º–µ–Ω—å—à–µ –∏ –Ω–∞–¥–µ–∂–Ω–µ–µ)
    CEMENT_SOURCES.forEach(source => {
      try {
        localStorage.setItem(source, jsonData);
      } catch (backupError) {
        console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ ${source}:`, backupError);
      }
    });
    
    // –ó–∞—Ç–µ–º –ø—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á
    try {
      localStorage.setItem(STORAGE_KEY, jsonData);
      localStorage.setItem(`${STORAGE_KEY}-timestamp`, new Date().toISOString());
      localStorage.setItem(`${STORAGE_KEY}-count`, Object.keys(files).length.toString());
      console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    } catch (mainKeyError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª—é—á–∞:', mainKeyError);
      
      // –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è, —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —Ä–µ–∑–µ—Ä–≤—ã –µ—Å—Ç—å
      const hasBackup = CEMENT_SOURCES.some(source => {
        try {
          const test = localStorage.getItem(source);
          return test && test.length > 100;
        } catch {
          return false;
        }
      });
      
      if (hasBackup) {
        console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è, –Ω–æ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –µ—Å—Ç—å');
      } else {
        throw new Error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –Ω–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á, –Ω–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å!');
      }
    }
    
    const cellFiles = Object.keys(files).filter(k => /^\d+$/.test(k) || k.includes('cell-') || k.includes('—è—á–µ–π–∫–∞'));
    
    console.log('‚úÖ === –ê–í–¢–û–°–û–•–†–ê–ù–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===');
    console.log(`üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${Object.keys(files).length} —Ñ–∞–π–ª–æ–≤ (${sizeInMB} –ú–ë)`);
    console.log(`üè† –§–∞–π–ª–æ–≤ —è—á–µ–µ–∫: ${cellFiles.length}`, cellFiles);
    console.log(`‚è∞ –í—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:`, new Date().toLocaleString('ru-RU'));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å
    const verification = localStorage.getItem(STORAGE_KEY);
    if (verification && JSON.parse(verification)) {
      console.log('‚úÖ –ü–†–û–í–ï–†–ö–ê –ü–†–û–ô–î–ï–ù–ê: –§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ localStorage');
    } else {
      console.error('‚ùå –ü–†–û–í–ï–†–ö–ê –ü–†–û–í–ê–õ–ï–ù–ê: –§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è!');
    }
    
  } catch (error) {
    console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø:', error);
    
    // –ü–æ–ø—ã—Ç–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–µ–∑ base64
    try {
      const emergencyFiles = Object.fromEntries(
        Object.entries(files).filter(([_, url]) => !url.startsWith('data:'))
      );
      localStorage.setItem(STORAGE_KEY + '-emergency', JSON.stringify(emergencyFiles));
      console.log('üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï:', Object.keys(emergencyFiles).length, '—Ñ–∞–π–ª–æ–≤');
    } catch (emergencyError) {
      console.error('‚ùå –î–∞–∂–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–ª–∏–ª–æ—Å—å:', emergencyError);
    }
  }
};

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —è—á–µ–µ–∫
export const saveCellSettings = (files: {[key: string]: string}): void => {
  const cellFiles = Object.entries(files).filter(([key]) => 
    key.includes('cell-') || 
    key.includes('—è—á–µ–π–∫–∞') || 
    /^\d+$/.test(key) ||
    key.includes('acceptance-')
  );
  
  if (cellFiles.length > 0) {
    try {
      const cellSettings = Object.fromEntries(cellFiles);
      localStorage.setItem('wb-pvz-cell-audio-settings-permanent', JSON.stringify(cellSettings));
      localStorage.setItem('wb-pvz-cell-audio-timestamp', new Date().toISOString());
      localStorage.setItem('wb-pvz-cell-audio-lock', 'LOCKED');
      
      console.log(`üè† üîí –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï –Ø–ß–ï–ï–ö: ${cellFiles.length} —Ñ–∞–π–ª–æ–≤`);
      console.log('üíé –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —è—á–µ–µ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ù–ê–í–°–ï–ì–î–ê –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –∑–∞—â–∏—â–µ–Ω–Ω–æ–º –∫–ª—é—á–µ!');
      console.log('üîê –ö–ª—é—á–∏ —è—á–µ–µ–∫:', cellFiles.map(([key]) => key));
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è—á–µ–µ–∫:', error);
    }
  }
};

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
export const loadAudioFilesFromStorage = (): {[key: string]: string} => {
  console.log('üîÑ === –ú–û–©–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ê–£–î–ò–û–§–ê–ô–õ–û–í ===');
  
  let finalFiles = {};
  const cementedFiles = {};
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
  const savedFiles = localStorage.getItem(STORAGE_KEY);
  if (savedFiles) {
    try {
      finalFiles = JSON.parse(savedFiles);
      console.log('üìÅ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:', Object.keys(finalFiles).length);
    } catch (parseError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–ª—é—á–∞:', parseError);
      finalFiles = {};
    }
  } else {
    console.warn('‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á wb-audio-files –û–¢–°–£–¢–°–¢–í–£–ï–¢! –ü—Ä–æ–±—É—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ...');
    
    // –ê–≤–∞—Ä–∏–π–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
    const backupSources = ['wb-pvz-cell-audio-settings-permanent', 'wb-pvz-cell-audio-cement'];
    for (const source of backupSources) {
      try {
        const backup = localStorage.getItem(source);
        if (backup) {
          const backupFiles = JSON.parse(backup);
          if (Object.keys(backupFiles).length > 0) {
            console.log(`üö® –ê–í–ê–†–ò–ô–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –∏–∑ ${source}: ${Object.keys(backupFiles).length} —Ñ–∞–π–ª–æ–≤`);
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á
            localStorage.setItem(STORAGE_KEY, backup);
            localStorage.setItem(`${STORAGE_KEY}-timestamp`, new Date().toISOString());
            localStorage.setItem(`${STORAGE_KEY}-count`, Object.keys(backupFiles).length.toString());
            
            finalFiles = backupFiles;
            console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª—é—á –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
            break;
          }
        }
      } catch (err) {
        console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ ${source}:`, err);
      }
    }
  }
  
  // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –ó–ê–ë–ï–¢–û–ù–ò–†–û–í–ê–ù–ù–´–• –§–ê–ô–õ–û–í –ò–ó –í–°–ï–• –ò–°–¢–û–ß–ù–ò–ö–û–í
  CEMENT_SOURCES.forEach(source => {
    try {
      const data = localStorage.getItem(source);
      if (data) {
        const sourceFiles = JSON.parse(data);
        Object.assign(cementedFiles, sourceFiles);
        console.log(`üèóÔ∏è –ò–ó –ë–ï–¢–û–ù–ê (${source}):`, Object.keys(sourceFiles).length, '—Ñ–∞–π–ª–æ–≤');
      }
    } catch (err) {
      console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ ${source}:`, err);
    }
  });
  
  // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –°–õ–ò–Ø–ù–ò–ï –í–°–ï–• –ò–°–¢–û–ß–ù–ò–ö–û–í
  if (Object.keys(cementedFiles).length > 0) {
    Object.assign(finalFiles, cementedFiles);
    console.log(`üèóÔ∏è –°–£–ú–ú–ê–†–ù–û –ò–ó –ë–ï–¢–û–ù–ê: ${Object.keys(cementedFiles).length} —Ñ–∞–π–ª–æ–≤`);
    
    // –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –†–ï–ó–ï–†–í–ù–ê–Ø –ö–û–ü–ò–Ø –í 6 –ú–ï–°–¢
    const allBackupKeys = [
      ...CEMENT_SOURCES,
      STORAGE_KEY,
      'wb-pvz-NEVER-LOSE-CELLS-BACKUP'
    ];
    
    allBackupKeys.forEach(key => {
      try {
        localStorage.setItem(key, JSON.stringify(finalFiles));
      } catch (err) {
        console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ ${key}:`, err);
      }
    });
    
    console.log(`üèóÔ∏è –§–ê–ô–õ–´ –ü–†–û–î–£–ë–õ–ò–†–û–í–ê–ù–´ –í ${allBackupKeys.length} –ú–ï–°–¢!`);
  }
  
  console.log(`‚úÖ –ò–¢–û–ì–û –ó–ê–ì–†–£–ñ–ï–ù–û: ${Object.keys(finalFiles).length} —Ñ–∞–π–ª–æ–≤`);
  return finalFiles;
};

// –ê–≤–∞—Ä–∏–π–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
export const emergencyRestore = (): {[key: string]: string} | null => {
  try {
    const emergency = localStorage.getItem('wb-pvz-cell-audio-cement');
    if (emergency) {
      console.log('üö® –ê–í–ê–†–ò–ô–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û!');
      return JSON.parse(emergency);
    }
  } catch (emergencyError) {
    console.error('üö® –ê–≤–∞—Ä–∏–π–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å:', emergencyError);
  }
  return null;
};

// –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∞—É–¥–∏–æ –¥–∞–Ω–Ω—ã—Ö
export const clearAudioStorage = (): void => {
  console.log('üóëÔ∏è === –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –í–°–ï–• –ê–£–î–ò–û –î–ê–ù–ù–´–• ===');
  
  // –°–ø–∏—Å–æ–∫ –í–°–ï–• –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–ª—é—á–µ–π –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
  const allAudioKeys = [
    STORAGE_KEY,
    `${STORAGE_KEY}-timestamp`,
    `${STORAGE_KEY}-count`,
    `${STORAGE_KEY}-emergency`,
    ...CEMENT_SOURCES,
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ –ø—É–ª–µ–Ω–µ–ø—Ä–æ–±–∏–≤–∞–µ–º–æ–π —Å–∏—Å—Ç–µ–º—ã
    'wb-unified-audio-system',
    'cellAudios',
    'wb-audio-files-backup',
    'wb-audio-files-cells-backup',
    'wb-audio-files-cells-backup-2', 
    'wb-audio-files-cells-backup-3',
    'wb-audio-files-cells-emergency',
    'wb-pvz-cells-permanent',
    'wb-pvz-cells-never-delete',
    'wb-pvz-cells-ultimate-backup',
    'wb-pvz-acceptance-cells',
    'wb-NEVER-LOSE-CELLS-BACKUP',
    'wb-pvz-cell-audio-timestamp',
    'wb-pvz-cell-audio-lock',
    
    // –°—Ç–∞—Ä—ã–µ –∫–ª—é—á–∏
    'audioFiles',
    'customAudioFiles',
    'wbAudioFiles'
  ];
  
  let removedCount = 0;
  
  allAudioKeys.forEach(key => {
    try {
      if (localStorage.getItem(key)) {
        localStorage.removeItem(key);
        removedCount++;
        console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω: ${key}`);
      }
    } catch (error) {
      console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å ${key}:`, error);
    }
  });
  
  // –£–¥–∞–ª—è–µ–º —Ç–∞–∫–∂–µ –≤—Å–µ –∫–ª—é—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
  const patterns = ['wb-audio', 'wb-pvz', 'cellAudio', 'audio'];
  
  for (let i = 0; i < localStorage.length; i++) {
    const key = localStorage.key(i);
    if (key && patterns.some(pattern => key.toLowerCase().includes(pattern))) {
      try {
        localStorage.removeItem(key);
        removedCount++;
        console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É: ${key}`);
        i--; // –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω–¥–µ–∫—Å —Ç–∞–∫ –∫–∞–∫ localStorage.length –∏–∑–º–µ–Ω–∏–ª—Å—è
      } catch (error) {
        console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ${key}:`, error);
      }
    }
  }
  
  console.log(`‚úÖ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê: —É–¥–∞–ª–µ–Ω–æ ${removedCount} –∫–ª—é—á–µ–π`);
  console.log('üßπ –í—Å–µ –∞—É–¥–∏–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω—ã –∏–∑ localStorage');
};