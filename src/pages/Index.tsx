import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { AudioUploader } from '@/components/AudioUploader';
import { DeliveryTab } from '@/components/DeliveryTab';
import { ReceivingTab } from '@/components/ReceivingTab';
import { ReturnTab } from '@/components/ReturnTab';
import { useAudio } from '@/hooks/useAudio';
import Icon from '@/components/ui/icon';

interface Product {
  id: string;
  article: string;
  name: string;
  size: string;
  color: string;
  barcode: string;
}

const Index = () => {
  const [activeTab, setActiveTab] = useState('delivery');
  const [phoneNumber, setPhoneNumber] = useState('');
  const [isScanning, setIsScanning] = useState(false);
  const [showAudioUploader, setShowAudioUploader] = useState(false);
  const [isProcessing, setIsProcessing] = useState(false); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤—ã–¥–∞—á–∏
  const [cellNumber] = useState(() => Math.floor(Math.random() * 482) + 1); // –°–ª—É—á–∞–π–Ω–∞—è —è—á–µ–π–∫–∞ 1-482
  const [currentStep, setCurrentStep] = useState('scan'); // scan, manager-scan, check, try-on, payment, rate
  const [itemsCount] = useState(() => Math.floor(Math.random() * 5) + 1); // –°–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ 1-5 —Ç–æ–≤–∞—Ä–æ–≤
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø—Ä–∏–µ–º–∫–∏
  const [receivingStep, setReceivingStep] = useState(1); // 1-4 —ç—Ç–∞–ø—ã –ø—Ä–∏–µ–º–∫–∏
  const [receivingBarcode, setReceivingBarcode] = useState('');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
  const [returnStep, setReturnStep] = useState(1); // 1-3 —ç—Ç–∞–ø—ã –≤–æ–∑–≤—Ä–∞—Ç–∞
  const [returnReason, setReturnReason] = useState('');

  const { playAudio, playCellAudio, updateAudioFiles, removeAudioFile, clearAllAudio, customAudioFiles } = useAudio();

  // –°–∏–º—É–ª—è—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤ - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
  const mockProducts: Product[] = Array.from({ length: itemsCount }, (_, index) => ({
    id: `16466782${index + 7}`,
    article: `456${index + 9}`,
    name: ['–¢–ï–õ–û–î–í–ò–ñ–ï–ù–ò–Ø / –°–≤–∏—Ç—à–æ—Ç –∂–µ–Ω—Å–∫–∏–π...', '–¢–ï–õ–û–î–í–ò–ñ–ï–ù–ò–Ø / –õ–æ–Ω–≥—Å–ª–∏–≤ –∂–µ–Ω—Å–∫–∏–π...', '–¢–ï–õ–û–î–í–ò–ñ–ï–ù–ò–Ø / –•—É–¥–∏ —É–Ω–∏—Å–µ–∫—Å...'][Math.floor(Math.random() * 3)],
    size: ['S', 'M', 'L', 'XL'][Math.floor(Math.random() * 4)],
    color: ['–†–æ–∑–æ–≤—ã–π', '–ß–µ—Ä–Ω—ã–π', '–ë–µ–ª—ã–π', '–°–µ—Ä—ã–π'][Math.floor(Math.random() * 4)],
    barcode: `48574857475${index + 8}`,
  }));

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—ã–¥–∞—á–∏
  const handleQRScan = async () => {
    if (activeTab === 'delivery' && !isProcessing) {
      setIsProcessing(true);
      setIsScanning(true);
      
      try {
        // 1. –û–∑–≤—É—á–∫–∞ —è—á–µ–π–∫–∏ –∏ —Å–∫–∏–¥–∫–∏ (–∫–ª–∏–µ–Ω—Ç —Å–∫–∞–Ω–∏—Ä—É–µ—Ç QR)
        console.log('üîä –ù–∞—á–∏–Ω–∞–µ–º –æ–∑–≤—É—á–∫—É –¥–ª—è QR —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è');
        await playAudio('cell-number');
        
        // –ñ–¥–µ–º –ø–æ–ª—Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –æ–∑–≤—É—á–∫–æ–π –Ω–æ–º–µ—Ä–∞ —è—á–µ–π–∫–∏
        await new Promise(resolve => setTimeout(resolve, 500));
        await playCellAudio(String(cellNumber));
        
        // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –æ–∑–≤—É—á–∫–æ–π –æ —Å–∫–∏–¥–∫–µ
        await new Promise(resolve => setTimeout(resolve, 1500));
        await playAudio('check-discount-wallet');
        
        // –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
        await new Promise(resolve => setTimeout(resolve, 2000));
        setIsScanning(false);
        setCurrentStep('manager-scan');
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–º–∏—Ç–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          handleManagerScan();
        }, 3000);
        
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ QR —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
        setIsScanning(false);
        setIsProcessing(false);
      }
    }
  };

  const handleManagerScan = async () => {
    try {
      console.log('üîä –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–∞–Ω–∏—Ä—É–µ—Ç —Ç–æ–≤–∞—Ä');
      setCurrentStep('check');
      
      // –û–∑–≤—É—á–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–≤–∞—Ä–∞ –ø–æ–¥ –∫–∞–º–µ—Ä–æ–π
      await playAudio('check-product-camera');
      
      // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–µ–π—Å—Ç–≤–∏—è–º
      setTimeout(() => {
        setCurrentStep('actions');
      }, 2000);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:', error);
    }
  };

  const handleTryOn = async () => {
    console.log('‚úÖ –¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–∏–º–µ—Ä–∫—É');
    setCurrentStep('payment');
    
    try {
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –Ω–∞ –ø—Ä–∏–º–µ—Ä–∫—É (6 —Å–µ–∫—É–Ω–¥)
      await new Promise(resolve => setTimeout(resolve, 6000));
      
      // –ü–æ—Å–ª–µ –ø—Ä–∏–º–µ—Ä–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã –∏ –æ—Ü–µ–Ω–∫–∏
      await playAudio('rate-pickup-point');
      
      setTimeout(() => {
        setCurrentStep('scan');
        setPhoneNumber('');
        setIsProcessing(false);
      }, 3000);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–∏–º–µ—Ä–∫–∏:', error);
      setIsProcessing(false);
    }
  };

  const handleIssue = async () => {
    console.log('‚úÖ –¢–æ–≤–∞—Ä –≤—ã–¥–∞–Ω –∫–ª–∏–µ–Ω—Ç—É');
    setCurrentStep('payment');
    
    try {
      // –°–∏–º—É–ª—è—Ü–∏—è –æ–∂–∏–¥–∞–Ω–∏—è –æ–ø–ª–∞—Ç—ã (4 —Å–µ–∫—É–Ω–¥—ã)
      await new Promise(resolve => setTimeout(resolve, 4000));
      
      // –û–∑–≤—É—á–∫–∞ –ø—Ä–æ—Å—å–±—ã –æ—Ü–µ–Ω–∏—Ç—å –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏
      await playAudio('rate-pickup-point');
      
      // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—á–∞–ª—É
      setTimeout(() => {
        setCurrentStep('scan');
        setPhoneNumber(''); // –û—á–∏—â–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        setIsProcessing(false); // –†–∞–∑—Ä–µ—à–∞–µ–º –Ω–æ–≤—ã–π —Ü–∏–∫–ª
      }, 3000);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–¥–∞—á–∏:', error);
      setIsProcessing(false);
    }
  };

  const handleConfirmCode = () => {
    if (phoneNumber.length === 4) {
      handleQRScan();
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–∏–µ–º–∫–∏
  const handleReceivingStart = () => {
    playAudio('receiving-start');
    setReceivingStep(2);
  };

  const handleReceivingNext = () => {
    if (receivingStep < 4) {
      const nextStep = receivingStep + 1;
      setReceivingStep(nextStep);
      
      if (nextStep === 4) {
        playAudio('receiving-complete');
      }
    }
  };

  const handleReceivingReset = () => {
    setReceivingStep(1);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
  const handleReturnStart = () => {
    playAudio('return-start');
    setReturnStep(2);
  };

  const handleReturnComplete = () => {
    playAudio('return-complete');
    setReturnStep(1);
  };

  const handleReturnReasonSelect = (reason: string) => {
    setReturnReason(reason);
  };

  const handleReturnStepChange = (step: number) => {
    setReturnStep(step);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
      {/* Header */}
      <header className="bg-white border-b">
        <div className="max-w-7xl mx-auto px-4 py-3">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <div className="w-10 h-10 rounded-lg flex items-center justify-center">
                <img src="https://cdn.poehali.dev/files/042b80d5-4fd3-473f-b81d-c42ef32edea0.png" alt="WB" className="w-8 h-8" />
              </div>
              <div className="text-sm text-gray-600">
                <div>ID 50006760</div>
                <div>V1.0.67</div>
              </div>
            </div>
            
            <div className="flex items-center space-x-4">
              <Icon name="Menu" className="w-6 h-6 text-gray-600" />
              <Icon name="Package" className="w-6 h-6 text-gray-600" />
              <Icon name="Search" className="w-6 h-6 text-gray-600" />
              <Icon name="MessageCircle" className="w-6 h-6 text-gray-600" />
              <Icon name="User" className="w-6 h-6 text-gray-600" />
              <Button 
                onClick={() => setShowAudioUploader(true)}
                variant="outline"
                size="sm"
              >
                <Icon name="Volume2" className="w-4 h-4 mr-2" />
                –û–∑–≤—É—á–∫–∞
              </Button>
              <Button className="bg-green-600 hover:bg-green-700 text-white">
                <Icon name="Download" className="w-4 h-4 mr-2" />
                –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é
              </Button>
            </div>
          </div>
        </div>
      </header>

      {/* Navigation Tabs */}
      <div className="bg-white border-b">
        <div className="max-w-7xl mx-auto px-4">
          <div className="flex space-x-8">
            {[
              { id: 'delivery', label: '–í—ã–¥–∞—á–∞', count: null, icon: 'Package' },
              { id: 'receiving', label: '–ü—Ä–∏—ë–º–∫–∞', count: null, icon: 'Inbox' },
              { id: 'return', label: '–í–æ–∑–≤—Ä–∞—Ç', count: 13, icon: 'RotateCcw' }
            ].map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`flex items-center space-x-2 py-4 px-2 border-b-2 font-medium text-sm transition-colors ${
                  activeTab === tab.id
                    ? 'border-purple-500 text-purple-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700'
                }`}
              >
                <Icon name={tab.icon} className="w-5 h-5" />
                <span>{tab.label}</span>
                {tab.count && (
                  <Badge className="bg-gray-200 text-gray-800 text-xs">
                    {tab.count}
                  </Badge>
                )}
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-4 py-6">
        {/* User Avatar */}
        <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center mb-8">
          <Icon name="User" className="w-6 h-6 text-purple-600" />
        </div>

        {/* –í—ã–¥–∞—á–∞ */}
        {activeTab === 'delivery' && (
          <DeliveryTab
            currentStep={currentStep}
            cellNumber={cellNumber}
            itemsCount={itemsCount}
            mockProducts={mockProducts}
            isScanning={isScanning}
            isProcessing={isProcessing}
            phoneNumber={phoneNumber}
            onPhoneNumberChange={setPhoneNumber}
            onQRScan={handleQRScan}
            onManagerScan={handleManagerScan}
            onTryOn={handleTryOn}
            onIssue={handleIssue}
            onConfirmCode={handleConfirmCode}
          />
        )}

        {/* –ü—Ä–∏—ë–º–∫–∞ */}
        {activeTab === 'receiving' && (
          <ReceivingTab
            receivingStep={receivingStep}
            receivingBarcode={receivingBarcode}
            onReceivingBarcodeChange={setReceivingBarcode}
            onReceivingStart={handleReceivingStart}
            onReceivingNext={handleReceivingNext}
            onReceivingReset={handleReceivingReset}
          />
        )}

        {/* –í–æ–∑–≤—Ä–∞—Ç */}
        {activeTab === 'return' && (
          <ReturnTab
            returnStep={returnStep}
            returnReason={returnReason}
            onReturnStart={handleReturnStart}
            onReturnComplete={handleReturnComplete}
            onReturnReasonSelect={handleReturnReasonSelect}
            onReturnStepChange={handleReturnStepChange}
          />
        )}
      </div>

      {/* Audio Uploader Modal */}
      {showAudioUploader && (
        <AudioUploader
          onAudioFilesUpdate={updateAudioFiles}
          onClose={() => setShowAudioUploader(false)}
          removeAudioFile={removeAudioFile}
          clearAllAudio={clearAllAudio}
          existingFiles={customAudioFiles}
        />
      )}
    </div>
  );
};

export default Index;